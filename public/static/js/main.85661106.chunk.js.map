{"version":3,"sources":["globals.js","components/admin/AddQuestion/AddQuestion.js","components/user/ViewQuestion/Question/Question.js","components/user/ViewQuestion/ViewQuestion.js","components/common/Home/Home.js","components/user/Ranking/Ranking.js","components/admin/AddContest/AddContest.js","components/user/Contests/ContestUser/ContestUser.js","components/user/Contests/Contests.js","components/admin/AllContests/ContestAdmin/ContestAdmin.js","components/admin/AllContests/AllContests.js","components/admin/AllQuestions/QuestionAdmin/QuestionAdmin.js","components/admin/AllQuestions/AllQuestions.js","components/admin/QuestionTransfer/QuestionTransfer.js","components/common/ErrorPage/ErrorPage.js","components/admin/UserManagement/UserManagement.js","components/common/Register/Styles.js","components/common/Register/Register.js","components/admin/UserDetails/UserDetails.js","components/admin/RankingAdmin/RankingAdmin.js","components/common/ClockAndConnection/ClockAndConnection.js","components/admin/Discussions/Discussions.js","components/user/Discussion/Discussion.js","components/admin/Announcements/Announcements.js","components/user/Announcement/Announcement.js","components/user/Profile/Profile.js","components/admin/ServerControl/ServerControl.js","components/BaseComponent.js","App.js","serviceWorker.js","index.js"],"names":["isAdmin","JSON","parse","atob","localStorage","getItem","split","admin","e","isUser","isLoggedIn","configs","baseUrl","getEmail","email","flagRank","contestInfo","currentTime","msg","phase","ct","Date","st","startTime","et","endTime","isFlag","isRanklist","rankList","show","automaticHide","timeOfHide","logout","socket","setTimeout","disconnect","removeItem","axios","interceptors","request","use","req","headers","validateStatus","status","err","useStyles","makeStyles","theme","root","flexGrow","textAlign","paper","padding","spacing","color","palette","text","secondary","opacity","FileListing","props","qid","fn","setLoading","setSnack","openConfirmation","loadData","deleteFile","delete","then","result","data","message","catch","error","ListItem","ListItemText","Link","href","IconButton","variant","onClick","title","content","positiveButtonText","negativeButtonText","cb","AddQuestion","history","classes","React","useState","description","flag","points","author","questionFile","question","setQuestion","files","setFiles","filesV","setFilesV","filesN","setFilesN","auth","setAuth","match","params","id","setId","cid","targetCID","setTargetCID","get","_id","addQuestion","formData","FormData","append","stringify","file","name","post","emit","trim","resetAll","editQuestion","put","useEffect","document","push","arr","i","length","item","className","Grid","container","md","Paper","elevation","Typography","TextField","margin","label","type","fullWidth","onInput","$e","target","value","disabled","multiline","onChange","htmlFor","Button","component","multiple","hidden","map","f","Fragment","key","List","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","avatar","backgroundColor","green","Question","info","fetchQuestions","contestId","setFlag","open2","setOpen2","open","setOpen","handleClose","handleClose2","Card","CardHeader","Avatar","aria-label","subheader","CardContent","paragraph","style","whiteSpace","wordBreak","substring","solved","Alert","severity","Dialog","onClose","maxWidth","aria-labelledby","DialogTitle","DialogContent","InputProps","startAdornment","InputAdornment","position","endAdornment","DialogActions","DialogContentText","active","background","ViewQuestion","globalTime","questions","setQuestions","setContestId","setInfo","setContestInfo","doTheMapping","ques","sols","quess","q","undefined","find","s","questionTitle","all","spread","Container","Home","StyledTableCell","withStyles","head","common","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","Ranking","fetched","setFetched","ranklist","setRanklist","fetchSolutions","solutions","userPoints","users","forEach","sol","userI","indexOf","userEmail","newUserPoint","createdAt","sort","a","b","contest","console","log","display","align","TableContainer","Table","TableHead","TableBody","k","scope","AddContest","imageUrl","rules","setContest","changeST","date","changeET","changeHT","addContest","setItem","editContest","utils","DateFnsUtils","justify","format","KeyboardButtonProps","FormControlLabel","control","Switch","checked","ContestUser","dateTimeFormat","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","second","CssBaseline","CardMedia","image","marginBottom","CardActions","disableSpacing","dangerouslySetInnerHTML","__html","replace","Contests","contests","setContests","cts","c","expandOpen","ContestAdmin","fetchContests","anchorRef","useRef","event","current","contains","handleListKeyDown","preventDefault","prevOpen","focus","toggleRanklist","transferQuestions","viewQuestions","manageUsers","discussions","announcements","deleteContest","ref","aria-controls","aria-haspopup","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","onKeyDown","MenuItem","allowedUsers","AllContests","QuestionAdmin","isDesc","setIsDesc","handleClickOpen2","isD","deleteQuestion","deletions","qf","delRes","dr","solves","aria-expanded","root2","cent","AllQuestions","count","setCount","qs","co","xs","sm","cardHeader","list","overflow","button","not","filter","intersection","QuestionTransfer","setChecked","left","setLeft","right","setRight","prev","setPrev","setQues","leftChecked","rightChecked","saveContestQuestions","finalArr","que","newQuestionTitles","r","fetchData","result1","result2","rightArr","leftArr","handleToggle","currentIndex","newChecked","splice","numberOfChecked","items","handleToggleAll","customList","Checkbox","indeterminate","inputProps","Divider","dense","labelId","ListItemIcon","tabIndex","disableRipple","primary","fixed","alignItems","direction","concat","ErrorPage","UserManagement","setUsers","saveContestUsers","user","newUserEmails","u","us","customStyles","Register","setUser","ecrs","setECRs","contact","rcid","password","errors","setErrors","valid","setValid","register","userData","Object","keys","validate","field","redundant","test","ecr","isValidForm","clsx","institueName","stream","Row","fetchUsers","deleteUser","instituteName","UserDetails","userlist","setUserlist","useRowStyles","borderBottom","row","size","Collapse","paddingBottom","colSpan","in","timeout","unmountOnExit","AdminRanking","ClockAndConnection","notification","setNotification","closeNotification","buttonText","Toolbar","noWrap","window","screen","overflowY","self","width","others","marginRight","typer","Discussions","setDiscussions","setMessage","arena","scrollIntoView","behaviour","sender","FormControl","InputLabel","Input","trimLeft","prevDisc","Discussion","timest","Announcements","setAnnouncements","setMsg","reverse","prevAnnounce","Announcement","Profile","userInfo","setUserInfo","cInfo","cn","cp","totalPoints","hasOwnProperty","ServerControl","logs","setLogs","command","setCommand","prevLogs","stderr","menuButton","hide","drawer","flexShrink","drawerPaper","drawerContainer","dangerLink","easing","sharp","leavingScreen","contentShift","easeOut","enteringScreen","appBar","zIndex","backdrop","BaseComponent","tcs","createSocket","setEmail","openD","setOpenD","pswd","setPswd","login","token","ids","d","routing","path","location","pathname","HtmlTooltip","tooltip","default","typography","pxToRem","border","Tooltip","exact","AppBar","edge","Drawer","render","propss","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","loading","setSocket","setTCS","setError","getTime","setGlobalTime","snack","confirmer","setConfirmer","soc","io","query","cids","on","tit","prefix","reload","closeConfirmation","conf","closeSnack","ttccss","clear","time","ThemeProvider","Backdrop","CircularProgress","wordWrap","Snackbar","autoHideDuration","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85661106.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst isAdmin = () => {\r\n    try {\r\n        return JSON.parse(atob(localStorage.getItem('token').split(\".\")[1])).admin;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst isUser = () => {\r\n    try {\r\n        return !JSON.parse(atob(localStorage.getItem('token').split(\".\")[1])).admin;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst isLoggedIn = () => {\r\n    try {\r\n        return isAdmin() || isUser();\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst getEmail = () => {\r\n    return isLoggedIn() ? JSON.parse(atob(localStorage.getItem('token').split(\".\")[1])).email : \"\";\r\n}\r\n\r\nconst flagRank = (contestInfo, currentTime) => {\r\n    let ct = new Date(currentTime);\r\n    let st = new Date(contestInfo.startTime);\r\n    let et = new Date(contestInfo.endTime);\r\n    let isFlag = false, isRanklist = false, msg, phase;\r\n    if(st > ct) {\r\n        msg = \"Contest has not started yet\";\r\n        phase = 1;\r\n    } else if(st < ct && et > ct) {\r\n        isRanklist = true;\r\n        isFlag = true;\r\n        msg = \"Contest is ongoing\";\r\n        phase = 2;\r\n        if(!(contestInfo.rankList.show && (!contestInfo.rankList.automaticHide || (contestInfo.rankList.automaticHide && new Date(contestInfo.rankList.timeOfHide) > ct)))) {\r\n            isRanklist = false;\r\n            msg += \", ranklist is hidden / not enabled\";\r\n        }\r\n    } else if(et < ct) {\r\n        msg = \"Contest has already ended\";\r\n        phase = 3;\r\n    }\r\n    return {isFlag, isRanklist, msg, phase}\r\n}\r\n\r\nconst logout = (socket) => {\r\n    setTimeout(() => { }, 1500);\r\n    socket.disconnect();\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('contestInfo');\r\n};\r\n\r\nexport const configs = {\r\n    baseUrl: process.env.NODE_ENV === 'development' ? 'http://localhost:4000' : '',\r\n    isAdmin,\r\n    isLoggedIn,\r\n    isUser,\r\n    getEmail,\r\n    flagRank,\r\n    logout\r\n}\r\n\r\naxios.interceptors.request.use(req => {\r\n    if(localStorage.getItem('token'))\r\n        req.headers = {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n    req.validateStatus = status => {\r\n        return status >= 200 && status < 505;\r\n    }\r\n    return req;\r\n},err => {});","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./AddQuestion.css\";\r\nimport { configs } from \"../../../globals\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Button, TextField, Grid, makeStyles, Paper, Typography, Link, List, ListItem, ListItemText, IconButton } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n    opacity: 0.9\r\n  },\r\n}));\r\n\r\nconst FileListing = (props) => {\r\n  const {qid, fn, setLoading, setSnack, openConfirmation, loadData} = props;\r\n\r\n  const deleteFile = () => {\r\n    setLoading(true);\r\n    axios.delete(`${configs.baseUrl}/admin/deleteFile/${qid}/${fn}`).then(result => {\r\n      setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n      loadData();\r\n    }).catch(error => {\r\n      setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const delF = () => {\r\n    openConfirmation({ title: \"Confirm\", content: `Delete File ${fn} for the Question ${qid}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: deleteFile })\r\n  };\r\n\r\n  return <ListItem>\r\n  <ListItemText><Link href={`${configs.baseUrl}/common/getFile/${qid}/${fn}`} color=\"error\">{fn}</Link></ListItemText>\r\n  <IconButton variant=\"contained\" color=\"secondary\" onClick={delF}><DeleteIcon /></IconButton>\r\n</ListItem>\r\n}\r\n\r\nconst AddQuestion = (props) => {\r\n\r\n  const { history, setLoading, setSnack, openConfirmation, socket } = props;\r\n  const classes = useStyles();\r\n\r\n  const [question, setQuestion] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    flag: \"\",\r\n    points: 0,\r\n    author: \"\",\r\n    questionFile: []\r\n  });\r\n\r\n  const [files, setFiles] = React.useState(null);\r\n  const [filesV, setFilesV] = React.useState([]);\r\n  const [filesN, setFilesN] = React.useState([]);\r\n  const [auth, setAuth] = React.useState(false);\r\n\r\n  const [id, setId] = React.useState(props.match.params.qid);\r\n  const [targetCID, setTargetCID] = React.useState(props.match.params.cid);\r\n\r\n  const loadData = () => {\r\n    axios.get(`${configs.baseUrl}/admin/getQuestion/${id}`).then(\r\n      result => {\r\n        if (result.data.status) {\r\n          const { title, description, points, flag, author, questionFile, _id } = result.data.data;\r\n          setQuestion({ title, description, points, flag, author, questionFile });\r\n          setId(title);\r\n          setFilesV(questionFile);\r\n        }\r\n        else {\r\n          if (result.status === 401)\r\n            configs.logout(socket);\r\n        }\r\n        setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n        setLoading(false);\r\n      }\r\n    ).catch(\r\n      error => {\r\n        setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n        setLoading(false);\r\n      }\r\n    )\r\n  }\r\n\r\n  const addQuestion = () => {\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    formData.append('question', JSON.stringify(question));\r\n    if(files)\r\n      for (let file of files)\r\n        formData.append('files[]', file, file.name);\r\n    axios.post(`${configs.baseUrl}/admin/addQuestion/${targetCID === 'notselected' ? 'new' : targetCID}`, formData).then(result => {\r\n      setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n      if (result.data.status) {\r\n        if(targetCID === 'notselected')\r\n          socket.emit('new-question-added2', { title: question.title });\r\n        else\r\n          socket.emit('new-question-added', { title: [question.title], name: result.data.message.split(\":\")[1].trim(), cid: targetCID });\r\n        resetAll();\r\n      }\r\n      else {\r\n        setLoading(false);\r\n      }\r\n    }).catch(error => {\r\n      setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const addQ = () => {\r\n    openConfirmation({ title: \"Confirm\", content: \"Sure to Add the Question?\", positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: addQuestion })\r\n  };\r\n\r\n  const editQuestion = () => {\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    formData.append('question', JSON.stringify(question));\r\n    if(files)\r\n      for (let file of files)\r\n        formData.append('files[]', file, file.name);\r\n    axios.put(`${configs.baseUrl}/admin/editQuestion/` + id, formData).then(result => {\r\n      setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n      if (result.data.status) {\r\n        socket.emit('question-edited', { title: question.title });\r\n        setFiles(null)\r\n        loadData();\r\n      }\r\n      else\r\n        setLoading(false);\r\n    }).catch(error => {\r\n      setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const editQ = () => {\r\n    openConfirmation({ title: \"Confirm\", content: `Save changes for the Question ${question.title}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: editQuestion })\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setQuestion({\r\n      title: \"\",\r\n      description: \"\",\r\n      flag: \"\",\r\n      points: 0,\r\n      author: \"\",\r\n      questionFile: []\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!configs.isAdmin()) {\r\n      setAuth(false);\r\n      history.push('/');\r\n    } else {\r\n      setAuth(true);\r\n      document.title = \"CryptoQuest|\" + (props.match.params.qid === 'new' ? \"Add\" : \"Edit\") + \" Question\";\r\n    }\r\n  }, [configs.isAdmin()]);\r\n\r\n  React.useEffect(() => {\r\n    if (!files)\r\n      setFilesN([]);\r\n    else {\r\n      let arr = [];\r\n      for (let i = 0; i < files.length; i++)\r\n        arr.push(files.item(i).name)\r\n      setFilesN(arr);\r\n    }\r\n  }, [files]);\r\n\r\n  React.useEffect(() => {\r\n    if (!auth) return;\r\n    setTargetCID(props.match.params.cid);\r\n    setId(props.match.params.qid);\r\n  }, [props.match.params.cid, props.match.params.qid, auth]);\r\n\r\n  React.useEffect(() => {\r\n    resetAll();\r\n    if (id !== 'new') {\r\n      setLoading(true);\r\n      loadData();\r\n    }\r\n  },[id])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item md={3} className=\"force100\"></Grid>\r\n          <Grid item md={6} className=\"force100\">\r\n            <Paper className={classes.paper} elevation={10}>\r\n              <Typography variant=\"h5\" color=\"secondary\">{id === 'new' ? \"Add New Question\" : `Edit Question`}</Typography>\r\n              {id !== 'new' && <h5>[<code>{id}</code>]</h5>}\r\n              <code>{targetCID === 'notselected' ? \"\" : `This Question will be directly added in ${targetCID}`}</code>\r\n              <br /><br />\r\n              <TextField variant=\"outlined\" margin=\"dense\" id=\"r1\" label=\"Title\" type=\"text\" fullWidth onInput={$e => setQuestion({ ...question, title: $e.target.value })} value={question.title} disabled={id !== 'new'} />\r\n              {id === 'new' && <small><i>Once the question is added, you can't change the title !!!</i></small>}\r\n              <br /><br />\r\n              <TextField multiline variant=\"outlined\" margin=\"dense\" id=\"r2\" label=\"Description\" type=\"text\" fullWidth onInput={$e => setQuestion({ ...question, description: $e.target.value })} value={question.description} />\r\n              <br /><br />\r\n              <TextField variant=\"outlined\" margin=\"dense\" id=\"r3\" label=\"Flag\" type=\"text\" fullWidth onChange={$e => setQuestion({ ...question, flag: $e.target.value })} value={question.flag} />\r\n              <br /><br />\r\n              <TextField variant=\"outlined\" margin=\"dense\" id=\"r4\" label=\"Points\" type=\"number\" fullWidth onChange={$e => setQuestion({ ...question, points: $e.target.value })} value={question.points} disabled={id !== 'new'} />\r\n              {id === 'new' && <small><i>If the question is added in some contest or is already in a contest, you can't change the points !!!</i></small>}\r\n              <br /><br />\r\n              <TextField variant=\"outlined\" margin=\"dense\" id=\"r5\" label=\"Author\" type=\"text\" fullWidth onInput={$e => setQuestion({ ...question, author: $e.target.value })} value={question.author} />\r\n              <br /><br />\r\n              <label htmlFor=\"r6\">\r\n                <Button variant=\"contained\" component=\"span\">\r\n                  Choose Files\r\n                </Button>\r\n              </label>\r\n              <input multiple id=\"r6\" type=\"file\" hidden onChange={$e => setFiles($e.target.files)} />\r\n              <br />\r\n              {\r\n                filesN.length ? filesN.map(f => <React.Fragment key={f}>\r\n                  <p>{f}</p>\r\n                </React.Fragment>\r\n                ) : <p>No Chosen Files</p>\r\n              }\r\n              <br /><List>\r\n              {\r\n                  \r\n                filesV.length ? filesV.map(f => <React.Fragment key={f}>\r\n                      <FileListing qid={id} fn={f} {...props} loadData={loadData} />\r\n                    </React.Fragment>\r\n                ) : <p>No Existing Files</p>\r\n                \r\n              }</List>\r\n              <br />\r\n              {id === 'new' && <Button variant=\"contained\" color=\"secondary\" onClick={addQ} disabled={question.description === \"\" || question.title === \"\" || question.points === \"\" || question.flag === \"\" || question.author === \"\"}>Add Question</Button>}\r\n              {id !== 'new' && <Button variant=\"contained\" onClick={editQ} disabled={question.description === \"\" || question.title === \"\" || question.points === \"\" || question.flag === \"\" || question.author === \"\"}>Edit Question</Button>}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={3} className=\"force100\"></Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../../globals\";\r\nimport { makeStyles, Card, Avatar, CardContent, Typography, CardHeader, Button, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, InputAdornment, Link } from '@material-ui/core';\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    avatar: {\r\n        backgroundColor: green[500],\r\n    },\r\n}));\r\n\r\nconst Question = (props) => {\r\n\r\n    const { question, setLoading, info, fetchQuestions, contestId, setSnack } = props;\r\n    const [flag, setFlag] = React.useState(\"\");\r\n    const classes = useStyles();\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const submitFlag = () => {\r\n        if(!info.isFlag) return;\r\n        setLoading(true);\r\n        axios.post(`${configs.baseUrl}/user/solveQuestion/${contestId}/${question.title}`, {flag}).then(\r\n            result => {\r\n                if(result.data.status)\r\n                    fetchQuestions();\r\n                else\r\n                    setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (f) => {\r\n        setOpen(false);\r\n        if(f)\r\n            submitFlag();\r\n    };\r\n\r\n    const handleClickOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={<Avatar aria-label=\"recipe\" className={classes.avatar}>{question.points}</Avatar>}\r\n                    title={question.title}\r\n                    subheader={question.author}\r\n                />\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" paragraph style={{ textAlign: 'justify', whiteSpace: 'pre-line', wordBreak: 'break-word' }}>\r\n                        {question.description.substring(0, 200)}{question.description.length >= 200 ? \" ...\" : \"\"}\r\n                    </Typography>\r\n                        <br />\r\n                    <Typography color=\"textSecondary\" paragraph style={{ textAlign: 'center', whiteSpace: 'pre-line', wordBreak: 'break-word' }}>\r\n                        {question.description.length >= 200 && <><Button variant=\"contained\" onClick={handleClickOpen2}>Read Full Statement</Button><br /><br /></>}\r\n                        {!question.solved && <><Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen} disabled={!info.isFlag}>Submit Flag</Button><br /></>}\r\n                        {question.solved && <Alert variant=\"outlined\" severity=\"success\">Solved</Alert>}\r\n                        <br />\r\n                        <i>{question.questionFile.length ? \"Files for this question:\" : \"No files for this question\"}</i>\r\n                        <br />\r\n                        {\r\n                            question.questionFile.map(f => {\r\n                                return <React.Fragment key={f}>\r\n                                    <Link href={`${configs.baseUrl}/common/getFile/${question.title}/${f}`} color=\"error\">{f}</Link>\r\n                                    <br />\r\n                                </React.Fragment>\r\n                            })\r\n                        }\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog open={open} onClose={() => handleClose(false)} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{question.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField margin=\"dense\" id=\"f\" label=\"Enter the Flag\" type=\"text\" fullWidth\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">Edge2k21{\"{\"}</InputAdornment>,\r\n                            endAdornment: <InputAdornment position=\"end\">{\"}\"}</InputAdornment>,\r\n                        }}\r\n                        onInput={($e) => setFlag($e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleClose(false)}> Close </Button>\r\n                    <Button onClick={() => handleClose(true)} disabled={!info.isFlag}> Submit Flag  </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={open2} onClose={handleClose2} maxWidth=\"sm\" aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{question.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{ textAlign: 'justify', whiteSpace: 'pre-line', wordBreak: 'break-word' }}> {question.description} </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose2}> Close </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Question;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Question from \"./Question/Question\";\r\nimport { configs } from \"../../../globals\";\r\nimport { makeStyles, Grid, Container, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    active: {\r\n        background: 'lightblue'\r\n    }\r\n}));\r\n\r\nconst ViewQuestion = (props) => {\r\n\r\n    const { history, setLoading, setSnack, globalTime,socket } = props;\r\n    const classes = useStyles();\r\n\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [questions, setQuestions] = React.useState([]);\r\n    const [contestId, setContestId] = React.useState(props.match.params.cid);\r\n    const [info, setInfo] = React.useState(null);\r\n    const [contestInfo, setContestInfo] = React.useState(null);\r\n\r\n    const doTheMapping = (ques, sols) => {\r\n        let quess = ques;\r\n        quess.map(q => {\r\n            q.solved = sols.find(s => s.questionTitle === q.title) !== undefined;\r\n        });\r\n        setQuestions(quess);\r\n    }\r\n\r\n    const fetchQuestions = () => {\r\n        if (questions.length === 0)\r\n            axios.all([axios.get(`${configs.baseUrl}/common/getContestQuestion/${contestId}`), axios.get(`${configs.baseUrl}/common/getSolution/${contestId}`)])\r\n                .then(axios.spread((ques, sols) => {\r\n                    if (ques.data.status && sols.data.status) {\r\n                        setInfo(configs.flagRank(ques.data.data.contestInfo, globalTime));\r\n                        setContestInfo(ques.data.data.contestInfo);\r\n                        doTheMapping(ques.data.data.questions, sols.data.data);\r\n                        setSnack({ show: true, msg: \"Succesfully Retrieved Users and Contest\", status: true });\r\n                    }\r\n                    else {\r\n                        setSnack({ show: true, msg: ques.data.message + \" | \" + sols.data.message, status: false });\r\n                        if(ques.status === 401 || sols.status === 401)\r\n                            configs.logout(socket);\r\n                    }\r\n                    setLoading(false);\r\n                })).catch(\r\n                    error => {\r\n                        setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                        setLoading(false);\r\n                    }\r\n                )\r\n        else\r\n            axios.get(`${configs.baseUrl}/common/getSolution/${contestId}`).then(\r\n                result => {\r\n                    if (result.data.status) {\r\n                        doTheMapping(questions,result.data.data);\r\n                    }\r\n                    else\r\n                        if(result.status === 401)\r\n                            configs.logout(socket);\r\n                    setLoading(false);\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"Cryptoquest|View Question\";\r\n        }\r\n    },[configs.isUser()]);\r\n\r\n    React.useEffect(() => {\r\n        if (contestInfo) setInfo(configs.flagRank(contestInfo, globalTime));\r\n    }, [contestInfo, globalTime]);\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        setLoading(true);\r\n        setContestId(props.match.params.cid)\r\n        fetchQuestions();\r\n    }, [props.match.params.cid, auth]);\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Container maxWidth=\"lg\">\r\n                <div className={classes.root}>\r\n                    <Grid container spacing={5}>\r\n                        {\r\n                            info && questions.map(q => {\r\n                                return <Grid item md={4} key={q._id} style={{opacity: 0.9}}>\r\n                                    <Paper elevation={10}>\r\n                                        <Question {...props} question={q} contestId={contestId} info={info} setSnack={setSnack} fetchQuestions={fetchQuestions} />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewQuestion;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n    }\r\n}));\r\n\r\nconst Home = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <></>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport {Typography,withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper} from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst Ranking = (props) => {\r\n\r\n    const { history,globalTime, setLoading, setSnack,socket } = props;\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [fetched, setFetched] = React.useState(0);\r\n    const [ranklist, setRanklist] = React.useState([]);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [contestInfo,setContestInfo] = React.useState(null);\r\n\r\n    const fetchSolutions = () => {\r\n        setRanklist([]);\r\n        setFetched(0);\r\n        axios.get(`${configs.baseUrl}/common/getSolutions/${id}`).then(\r\n            result => {\r\n                if (result.data.status) {\r\n                    let solutions = result.data.data;\r\n                    var userPoints = [];\r\n                    let users = [];\r\n                    solutions.forEach(sol => {\r\n                        var userI = users.indexOf(sol.userEmail);\r\n                        if (userI === -1) {\r\n                            users = [...users, sol.userEmail];\r\n                            var newUserPoint = {\r\n                                'email': sol.userEmail,\r\n                                'points': sol.points,\r\n                                'createdAt': sol.createdAt\r\n                            }\r\n                            userPoints.push(newUserPoint);\r\n                        }\r\n                        else {\r\n                            userPoints[userI].points += sol.points;\r\n                            userPoints[userI].createdAt = sol.createdAt;\r\n                        }\r\n                    });\r\n                    //Sort in terms of points\r\n                    if(userPoints.length >0)\r\n                    {\r\n                        userPoints.sort(function (a, b) {\r\n                            // return ((a.points < b.points) ? 1 : -1);\r\n                            if (a.points < b.points)\r\n                                return 1;\r\n                            else if (a.points === b.points && a.createdAt > b.createdAt)\r\n                                return 1;\r\n                            else\r\n                                return -1;\r\n                        });\r\n                    }\r\n                    setRanklist(userPoints.length === 0 ? [null] : userPoints);\r\n                    setFetched(1);\r\n                    var contest=result.data.contest;\r\n                    contest.status=configs.flagRank(contest,globalTime);\r\n                    setContestInfo(contest);\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                }\r\n                else\r\n                {\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                    if(result.status === 401)\r\n                        configs.logout(socket);\r\n                    if(result.data.data)\r\n                        setFetched(-1);\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false })\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|Ranking\"\r\n        }\r\n    },[configs.isUser()]);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(!fetched);\r\n    }, [fetched]);\r\n\r\n    React.useEffect(() => {\r\n        if(auth)\r\n        {\r\n            setId(props.match.params.cid);\r\n            setLoading(true);\r\n            fetchSolutions();\r\n        }  \r\n    }, [props.match.params.cid,auth]);\r\n    \r\n    React.useEffect(() => {\r\n        if (contestInfo)\r\n        {\r\n            var status =configs.flagRank(contestInfo, globalTime);\r\n            if(contestInfo.status.isRanklist!==status.isRanklist)\r\n            {\r\n                console.log(status);\r\n                contestInfo.status=status;\r\n                setLoading(true);\r\n                fetchSolutions();\r\n            }\r\n        }\r\n    }, [contestInfo,globalTime]);\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            {contestInfo !== null && fetched!== -1 && <Typography variant=\"h4\" display=\"block\" color=\"textPrimary\" align=\"center\">\r\n                Contest Name: <b>{contestInfo.name}</b>\r\n            </Typography>}\r\n            <br />\r\n            {ranklist.length !== 0 && ranklist[0]!== null && <TableContainer component={Paper} elevation={10} style={{opacity: 0.9}}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <StyledTableCell>#</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Email ID&nbsp;</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Points</StyledTableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {ranklist.map((k,i) => (\r\n                    <StyledTableRow key={k.email}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {i+1}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">{k.email}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">{k.points}</StyledTableCell>\r\n                    </StyledTableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>}\r\n            {ranklist.length !== 0 && ranklist[0] == null && <Typography paragraph variant=\"h4\" display=\"block\" color=\"secondary\" align=\"center\">\r\n                <b>No user has solved any questions</b>\r\n            </Typography>}\r\n            {fetched ===1 && ranklist.length === 0 && <Typography paragraph variant=\"h4\" display=\"block\" color=\"secondary\" align=\"center\">\r\n                <b><i>Contest ID is invalid :(</i></b>\r\n            </Typography>}\r\n            {fetched ===-1&& <Typography paragraph variant=\"h4\" display=\"block\" color=\"secondary\" align=\"center\">\r\n                <b><i>Ranklist Hidden :(</i></b>\r\n            </Typography>}\r\n        </>\r\n        \r\n      );\r\n}\r\n\r\nexport default Ranking;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./AddContest.css\";\r\nimport { configs } from \"../../../globals\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Button, TextField, FormControlLabel, Switch, Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        textAlign: \"center\"\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        opacity: 0.9\r\n    },\r\n}));\r\n\r\nconst AddContest = (props) => {\r\n\r\n    const { history, setLoading, setSnack, openConfirmation, socket } = props;\r\n    const classes = useStyles();\r\n\r\n    const [contest, setContest] = React.useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        startTime: new Date(),\r\n        endTime: new Date(),\r\n        imageUrl: \"\",\r\n        rules: \"\",\r\n        rankList: {\r\n            show: false,\r\n            automaticHide: false,\r\n            timeOfHide: new Date()\r\n        }\r\n    });\r\n\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [auth, setAuth] = React.useState(false);\r\n\r\n    const changeST = date => setContest({...contest, startTime: date});\r\n    const changeET = date => setContest({...contest, endTime: date});\r\n    const changeHT = date => setContest({...contest, rankList: {...contest.rankList, timeOfHide: date}});\r\n\r\n    const loadData = () => {\r\n        console.log(id);\r\n        axios.get(`${configs.baseUrl}/admin/getContest/${id}`).then(\r\n            result => {\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if (result.data.status) {\r\n                    const { _id, name, description, startTime, endTime, imageUrl, rules, rankList } = result.data.data;\r\n                    setContest({ name, description, startTime, endTime, imageUrl, rules, rankList });\r\n                    setId(name);\r\n                }\r\n                else {\r\n                    if(result.status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const addContest = () => {\r\n        setLoading(true);\r\n        axios.post(`${configs.baseUrl}/admin/addContest`, contest).then(result => {\r\n            setSnack({ show: true, msg: result.data.message, status: result.data.status })\r\n            if (result.data.status) {\r\n                socket.emit('new-contest-added', { name: contest.name, cid: result.data.cid });\r\n                localStorage.setItem('contestInfo', JSON.stringify([...JSON.parse(localStorage.getItem('contestInfo')), result.data.cid]));\r\n                resetAll();\r\n            }\r\n            else\r\n                setLoading(false);\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false })\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const addC = () => {\r\n        openConfirmation({ title: \"Confirm\", content: \"Sure to Add the Contest?\", positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: addContest })\r\n    };\r\n\r\n    const editContest = () => {\r\n        setLoading(true);\r\n        axios.put(`${configs.baseUrl}/admin/editContest/` + id, contest).then(result => {\r\n            setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            if (result.data.status) {\r\n                console.log({ name: contest.name, cid: id });\r\n                socket.emit('contest-edited', { name: contest.name, cid: id });\r\n                loadData();\r\n            }\r\n            else\r\n                setLoading(false);\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const editC = () => {\r\n        openConfirmation({ title: \"Confirm\", content: `Save changes for the Contest ${contest.name}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: editContest })\r\n    };\r\n\r\n    const resetAll = () => {\r\n        setContest({\r\n            name: \"\",\r\n            description: \"\",\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            imageUrl: \"\",\r\n            rules: \"\",\r\n            rankList: {\r\n                show: false,\r\n                automaticHide: false,\r\n                timeOfHide: new Date()\r\n            }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|Add Question\";\r\n        }\r\n    }, [configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        setId(props.match.params.cid);\r\n    }, [props.match.params.cid, auth]);\r\n\r\n    React.useEffect(() => {\r\n        resetAll();\r\n        if (id !== 'new') {\r\n            setLoading(true);\r\n            loadData();\r\n        }\r\n    },[id])\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item md={3} className=\"force100\"></Grid>\r\n                    <Grid item md={6} className=\"force100\">\r\n                        <Paper className={classes.paper} elevation={10}>\r\n                            <Typography variant=\"h5\" color=\"secondary\">{id === 'new' ? \"Create New Contest\" : `Edit Contest`}</Typography>\r\n                            {id !== 'new' && <h5><code>{id}</code></h5>}\r\n                            <br /><br />\r\n                            <TextField variant=\"outlined\" margin=\"dense\" id=\"r1\" label=\"Name\" type=\"text\" fullWidth onInput={$e => setContest({ ...contest, name: $e.target.value })} value={contest.name} disabled={id !== 'new'} />\r\n                            {id === 'new' && <small><i>Once the contest is added, you can't change the name !!!</i></small>}\r\n                            <br /><br />\r\n                            <TextField variant=\"outlined\" margin=\"dense\" id=\"r2\" label=\"Description\" type=\"text\" fullWidth onInput={$e => setContest({ ...contest, description: $e.target.value })} value={contest.description} />\r\n                            <br /><br />\r\n                            <TextField variant=\"outlined\" margin=\"dense\" id=\"r6\" label=\"Rules\" type=\"text\" multiline fullWidth onInput={$e => setContest({ ...contest, rules: $e.target.value })} value={contest.rules} />\r\n                            <br /><br />\r\n                            <Typography>Starts at:</Typography>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker margin=\"normal\" id=\"dpd1\" label=\"Set Date\" format=\"MM/dd/yyyy\" value={contest.startTime} onChange={changeST} KeyboardButtonProps={{ 'aria-label': 'change date' }} />\r\n                                    <KeyboardTimePicker margin=\"normal\" id=\"tp1\" label=\"Set Time\" value={contest.startTime} onChange={changeST} KeyboardButtonProps={{ 'aria-label': 'change time' }} />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                            <br /><br />\r\n                            <Typography>Ends at:</Typography>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker margin=\"normal\" id=\"dpd2\" label=\"Set Date\" format=\"MM/dd/yyyy\" value={contest.endTime} onChange={changeET} KeyboardButtonProps={{ 'aria-label': 'change date' }} />\r\n                                    <KeyboardTimePicker margin=\"normal\" id=\"tp2\" label=\"Set Time\" value={contest.endTime} onChange={changeET} KeyboardButtonProps={{ 'aria-label': 'change time' }} />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                            <br /><br />\r\n                            <TextField variant=\"outlined\" margin=\"dense\" id=\"r5\" label=\"Image URL\" type=\"text\" fullWidth onInput={$e => setContest({ ...contest, imageUrl: $e.target.value })} value={contest.imageUrl} />\r\n                            <br /><br />\r\n                            <FormControlLabel control={<Switch checked={contest.rankList.show} onClick={() => setContest({ ...contest, rankList: { ...contest.rankList, show: !contest.rankList.show, automaticHide: contest.rankList.automaticHide ? false : contest.rankList.automaticHide } })} />} label=\"Show Ranklist to Participants\" />\r\n                            {contest.rankList.show && <FormControlLabel control={<Switch checked={contest.rankList.automaticHide} onClick={() => setContest({ ...contest, rankList: { ...contest.rankList, automaticHide: !contest.rankList.automaticHide } })} />} label=\"Automatically Hide Ranklist at specific time\" />}\r\n                            {contest.rankList.automaticHide && <><Typography>Automatically Hides at:</Typography>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker margin=\"normal\" id=\"dpd3\" label=\"Set Date\" format=\"MM/dd/yyyy\" value={contest.rankList.timeOfHide} onChange={changeHT} KeyboardButtonProps={{ 'aria-label': 'change date' }} />\r\n                                    <KeyboardTimePicker margin=\"normal\" id=\"tp3\" label=\"Set Time\" value={contest.rankList.timeOfHide} onChange={changeHT} KeyboardButtonProps={{ 'aria-label': 'change time' }} />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                            </>}\r\n                            <br /><br />\r\n                            {id === 'new' && <Button variant=\"contained\" color=\"secondary\" onClick={addC} disabled={contest.name === \"\" || contest.description === \"\"}>Add Contest</Button>}\r\n                            {id !== 'new' && <Button variant=\"contained\" onClick={editC} disabled={contest.name === \"\" || contest.description === \"\"}>Edit Contest</Button>}\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item md={3} className=\"force100\"></Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddContest;\r\n","import React from \"react\";\r\nimport { makeStyles, Card, CardHeader, CardMedia, CardContent, Typography, CssBaseline, Button, CardActions, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        marginLeft: 'auto'\r\n    }\r\n}));\r\n\r\nconst ContestUser = (props) => {\r\n    const { history, contest } = props;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    const handleOpen = () => setOpen(true);\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const viewQuestions = () => history.push(`/questions/${contest.name}`);\r\n\r\n    const viewRanklist = () => history.push(`/ranklist/${contest.name}`);\r\n\r\n    const viewDiscussion = () => history.push(`/discussion/${contest.name}`);\r\n\r\n    const viewAnnouncement = () => history.push(`/announcement/${contest.name}`);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader style={{ textAlign: 'center' }} title={contest.name} />\r\n                <CssBaseline />\r\n                {contest.imageUrl && <CardMedia className={classes.media} image={contest.imageUrl} title=\"Logo\" />}\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" paragraph style={{ textAlign: 'justify', wordBreak: 'break-word' }}>{contest.description}</Typography>\r\n                </CardContent>\r\n                <CardContent style={{ textAlign: 'center' }}>\r\n                    <Typography paragraph color=\"textSecondary\" style={{ marginBottom: 'auto' }}><b>From: </b></Typography>\r\n                    <Typography paragraph style={{ wordBreak: 'break-word' }}>{dateTimeFormat.format(new Date(contest.startTime))}</Typography>\r\n                    <Typography paragraph color=\"textSecondary\" style={{ marginBottom: 'auto' }}><b>To: </b></Typography>\r\n                    <Typography paragraph style={{ wordBreak: 'break-word' }}>{dateTimeFormat.format(new Date(contest.endTime))} </Typography>\r\n                    <Button variant=\"contained\" onClick={handleOpen}>Rules</Button>\r\n                    <br /><br />\r\n                    <Alert variant=\"filled\" severity={contest.status.phase === 3 ? \"error\" : (contest.status.phase === 2 ? \"success\" : \"info\")} style={{ marginBottom: 'auto' }}>{contest.status.msg}</Alert>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <Button color=\"secondary\" variant=\"contained\" onClick={viewQuestions} disabled={!contest.status.isFlag}>Solve Questions</Button>\r\n                    <Button className={classes.expand} color=\"secondary\" variant=\"contained\" onClick={viewRanklist} disabled={!contest.status.isRanklist}>View Leaderboard</Button>\r\n                </CardActions>\r\n                <CardActions disableSpacing>\r\n                    <div style={{ margin: '0 auto' }}>\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={viewDiscussion} disabled={!contest.status.isFlag}>Have Queries? Join Discussion</Button>\r\n                    </div>\r\n                </CardActions>\r\n                <CardActions disableSpacing>\r\n                    <div style={{ margin: '0 auto' }}>\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={viewAnnouncement} disabled={!contest.status.isFlag}>See Announcements</Button>\r\n                    </div>\r\n                </CardActions>\r\n                <br />\r\n            </Card>\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Rules</DialogTitle>\r\n                <DialogContent>\r\n                    <span dangerouslySetInnerHTML={{ __html: contest.rules.replace(/\\n/g, \"<br />\") }}></span>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}> Close </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContestUser;\r\n","import React from \"react\";\r\nimport { configs } from \"../../../globals\";\r\nimport axios from \"axios\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport ContestUser from \"./ContestUser/ContestUser\";\r\n\r\nconst Contests = (props) => {\r\n    const { history, globalTime, setLoading, setSnack,socket } = props;\r\n    const [contests, setContests] = React.useState([]);\r\n    const [auth, setAuth] = React.useState(false);\r\n\r\n    const fetchContests = () => {\r\n        setLoading(true);\r\n        axios.get(`${configs.baseUrl}/common/getAllContest`).then(\r\n            result => {\r\n                if (result.data.status) {\r\n                    let cts = result.data.data;\r\n                    cts.map(c => {\r\n                        c.status = configs.flagRank(c, globalTime);\r\n                    })\r\n                    setContests(cts);\r\n                }\r\n                else\r\n                {\r\n                    if(result.status === 401)\r\n                    {\r\n                        configs.logout(socket);\r\n                    }\r\n                }\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            history.push('/');\r\n            setAuth(false);\r\n        } else\r\n        {\r\n            document.title=\"CryptoQuest|Contests\";\r\n            setAuth(true);\r\n        }\r\n    },[configs.isUser()]);\r\n\r\n    React.useEffect(() => {\r\n        setContests(contests);\r\n    }, [globalTime]);\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        fetchContests();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Grid container spacing={6}>\r\n                {\r\n                    contests.map(contest => <Grid item md={4} key={contest._id} style={{opacity: 0.9}}>\r\n                        <Paper elevation={10}>\r\n                            <ContestUser {...props} contest={contest} />\r\n                        </Paper>\r\n                    </Grid>)\r\n                }\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contests;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../../globals\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport { Popper, Paper, ClickAwayListener, MenuList, MenuItem, Grow, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@material-ui/core\";\r\nimport { makeStyles, Card, CardHeader, CardMedia, CardContent, Typography, CssBaseline, IconButton, CardActions } from \"@material-ui/core\";\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nconst ContestAdmin = (props) => {\r\n\r\n    const { contest, history, setLoading, setSnack, fetchContests, openConfirmation } = props;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleOpen2 = () => setOpen2(true);\r\n\r\n    const handleClose2 = () => setOpen2(false);\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    //Doubt\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    const toggleRanklist = () => {\r\n        setLoading(true);\r\n        axios.get(`${configs.baseUrl}/admin/toggleRankList/${contest._id}`).then(\r\n            result => {\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if(result.data.status)\r\n                {\r\n                    fetchContests();\r\n                }\r\n                else\r\n                {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    };\r\n\r\n    const togL = () => {\r\n        openConfirmation({title: \"Confirm\", content: `Sure to ${contest.rankList.show ? \"Hide\" : \"Show\"} the Leaderboard of the Contest ${contest.name}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: toggleRanklist})\r\n    };\r\n\r\n    const editContest = () => {\r\n        history.push('/contest/' + contest.name);\r\n    }\r\n\r\n    const transferQuestions = () => {\r\n        history.push('/transfer/' + contest.name);\r\n    }\r\n\r\n    const addQuestion = () => {\r\n        history.push(`/question/${contest.name}/new`);\r\n    }\r\n\r\n    const viewQuestions = () => {\r\n        history.push(`/allquestions/${contest.name}`);\r\n    }\r\n\r\n    const manageUsers = () => {\r\n        history.push(`/manageusers/${contest.name}`);\r\n    }\r\n\r\n    const rankList = () => {\r\n        history.push(`/userranklist/${contest.name}`)\r\n    }\r\n\r\n    const discussions = () => {\r\n        history.push(`/discussions/${contest.name}`)\r\n    }\r\n\r\n    const announcements = () => {\r\n        history.push(`/announcements/${contest.name}`)\r\n    }\r\n\r\n    const deleteContest = () => {\r\n        setLoading(true);\r\n        axios.delete(`${configs.baseUrl}/admin/deleteContest/${contest.name}`).then(\r\n            result => {\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if(result.data.status)\r\n                {\r\n                    fetchContests();\r\n                }\r\n                else\r\n                {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const delC = () => {\r\n        openConfirmation({title: \"Confirm\", content: `Sure to Delete the Contest ${contest.name}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: deleteContest})\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader\r\n                    title={contest.name}\r\n                    action={\r\n                        <IconButton ref={anchorRef} aria-controls={open ? 'menu-list-grow' : undefined}\r\n                            aria-haspopup=\"true\" onClick={handleToggle} title=\"Menu\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <CssBaseline />\r\n                {contest.imageUrl && <CardMedia className={classes.media} image={contest.imageUrl} title=\"Logo\" />}\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}>\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem onClick={viewQuestions}>View Questions</MenuItem>\r\n                                        <MenuItem onClick={addQuestion}>Add Question</MenuItem>\r\n                                        <MenuItem onClick={transferQuestions}>Transfer Questions</MenuItem>\r\n                                        <MenuItem onClick={manageUsers}> Allowed Users </MenuItem>\r\n                                        <MenuItem onClick={rankList}>Ranklist</MenuItem>\r\n                                        <MenuItem onClick={discussions}>Discussions</MenuItem>\r\n                                        <MenuItem onClick={announcements}>Announcements</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n                <CardContent>\r\n                    <Typography paragraph style={{ textAlign: 'justify', wordBreak: 'break-word' }}>{contest.description}</Typography>\r\n                    <Alert variant=\"outlined\" severity=\"info\">{contest.allowedUsers.length} user(s) are allowed, {contest.questions.length} questions(s) are linked</Alert>\r\n                </CardContent>\r\n                <CardContent style={{ textAlign: 'center'}}>\r\n                    <Typography paragraph color=\"textSecondary\" style={{ marginBottom: 'auto' }}><b>From: </b></Typography>\r\n                    <Typography paragraph style={{ wordBreak: 'break-word' }}>{dateTimeFormat.format(new Date(contest.startTime))}</Typography>\r\n                    <Typography paragraph color=\"textSecondary\" style={{ marginBottom: 'auto' }}><b>To: </b></Typography>\r\n                    <Typography paragraph style={{ wordBreak: 'break-word' }}>{dateTimeFormat.format(new Date(contest.endTime))} </Typography>\r\n                    <Button variant=\"contained\" onClick={handleOpen2}>Rules</Button>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Alert variant=\"outlined\" severity={contest.rankList.show ? \"success\" : \"warning\"}>Ranklist is {contest.rankList.show ? \"\" : \"in\"}visible</Alert>\r\n                    {!contest.rankList.automaticHide && <Alert variant=\"outlined\" severity=\"warning\">Auto Hide Ranklist is OFF</Alert>}\r\n                    {contest.rankList.automaticHide && <Alert variant=\"outlined\" severity=\"success\"><b>Ranklist will automatically hide at: </b><br />{dateTimeFormat.format(new Date(contest.rankList.timeOfHide))}</Alert>}\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton onClick={editContest} title=\"Edit\"> <CreateIcon /> </IconButton>\r\n                    <IconButton onClick={delC} title=\"Delete\"> <DeleteIcon /> </IconButton>\r\n                    {(!contest.rankList.automaticHide || (contest.rankList.automaticHide && new Date(contest.rankList.timeOfHide) > new Date())) && <IconButton className={classes.expand} onClick={togL} title=\"Toggle Ranklist\">{contest.rankList.show ? <VisibilityOffIcon /> : <VisibilityIcon />}</IconButton>}\r\n                </CardActions>\r\n            </Card>\r\n            <Dialog open={open2} onClose={handleClose2} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Rules</DialogTitle>\r\n                <DialogContent>\r\n                    <span dangerouslySetInnerHTML={{__html: contest.rules.replace(/\\n/g,\"<br />\")}}></span>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose2}> Close </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContestAdmin;\r\n","import React from \"react\";\r\nimport { configs } from \"../../../globals\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, Paper, Grid } from \"@material-ui/core\";\r\nimport ContestAdmin from \"./ContestAdmin/ContestAdmin\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst AllContests = (props) => {\r\n    const { history, setLoading, setSnack, openConfirmation,socket } = props;\r\n    const classes = useStyles();\r\n\r\n    const [contests, setContests] = React.useState([]);\r\n    const [auth, setAuth] = React.useState(false);\r\n\r\n    const fetchContests = () => {\r\n        axios.get(`${configs.baseUrl}/admin/getAllContest`).then(\r\n            result => {\r\n                if(result.data.status)\r\n                {\r\n                    setContests(result.data.data);\r\n                }\r\n                else\r\n                    if(result.status === 401)\r\n                        configs.logout(socket);\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            history.push('/');\r\n            setAuth(false);\r\n        } else\r\n        {\r\n            document.title=\"Cryptoquest|All Contest\";\r\n            setAuth(true);\r\n        }\r\n    },[configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        setLoading(true);\r\n        fetchContests();\r\n    }, [auth]);\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Grid container spacing={6}>\r\n                {\r\n                    contests.map(c => <Grid item md={4} key={c._id} style={{opacity: 0.9}}>\r\n                        <Paper elevation={10}>\r\n                            <ContestAdmin {...props} contest={c} fetchContests={fetchContests} openConfirmation={openConfirmation} setLoading={setLoading} setSnack={setSnack} />\r\n                        </Paper>\r\n                    </Grid>\r\n                    )\r\n                }\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AllContests;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../../globals\";\r\nimport { makeStyles, Card, Avatar, IconButton, CardContent, Typography, CardActions, CardHeader, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Link } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    avatar: {\r\n        backgroundColor: green[500],\r\n    },\r\n}));\r\n\r\nconst QuestionAdmin = (props) => {\r\n\r\n    const { question, history, setLoading, setSnack, fetchQuestions, openConfirmation } = props;\r\n    const classes = useStyles();\r\n    const [isDesc, setIsDesc] = React.useState(true);\r\n    const [open2, setOpen2] = React.useState(false);\r\n\r\n    const handleClickOpen2 = (isD) => {\r\n        setIsDesc(isD);\r\n        setOpen2(true);\r\n    };\r\n\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n\r\n    const editQuestion = () => {\r\n        history.push('/question/notselected/' + question.title);\r\n    }\r\n\r\n    const deleteQuestion = () => {\r\n        setLoading(true);\r\n        let deletions = [];\r\n        question.questionFile.forEach(qf => deletions.push(axios.delete(`${configs.baseUrl}/admin/deleteFile/${question.title}/${qf}`)));\r\n        axios.all(deletions).then(delRes => {\r\n            if(delRes.find(dr => !dr.data.status)){\r\n                setSnack({ show: true, msg: \"Some Files can't be deleted\", status: false });\r\n                setLoading(false);\r\n            } else \r\n            axios.delete(`${configs.baseUrl}/admin/deleteQuestion/${question.title}`).then(\r\n                result => {\r\n                    if(result.data.status)\r\n                        fetchQuestions();\r\n                    else\r\n                        setLoading(false);\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n        }).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const delQ = () => {\r\n        openConfirmation({title: \"Confirm\", content: `Sure to Delete the Question ${question.title}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: deleteQuestion})\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={<Avatar aria-label=\"recipe\" className={classes.avatar}> {question.points} </Avatar>}\r\n                    title={question.title}\r\n                    subheader={question.author}\r\n                />\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" paragraph style={{ textAlign: 'justify', whiteSpace: 'pre-line', wordBreak: 'break-word' }}>\r\n                        {question.description.substring(0, 200)}{question.description.length >= 200 ? \" ...\" : \"\"}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" style={{ textAlign: 'center', whiteSpace: 'pre-line', wordBreak: 'break-word' }}>\r\n                        {question.description.length >= 200 && <><Button variant=\"contained\"  onClick={() => handleClickOpen2(true)}>Read Full Statement</Button><br /></>}<br />\r\n                        <i>{question.questionFile.length ? \"File(s) for this question:\" : \"No file(s) for this question\"}</i>\r\n                        <br />\r\n                        {\r\n                            question.questionFile.map(f => {\r\n                                return <React.Fragment key={f}>\r\n                                    <Link href={`${configs.baseUrl}/common/getFile/${question.title}/${f}`} color=\"error\">{f}</Link>\r\n                                    <br />\r\n                                </React.Fragment>\r\n                            })\r\n                        }\r\n                        <br />\r\n                        <code>{question.flag}</code>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing hidden={!configs.isAdmin()}>\r\n                    <IconButton onClick={editQuestion}>\r\n                        <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={delQ}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    {question.solves && <IconButton className={classes.expand} onClick={() => handleClickOpen2(false)} aria-expanded={open2} aria-label=\"show more\">\r\n                        <InfoIcon />\r\n                    </IconButton>}\r\n                </CardActions>\r\n            </Card>\r\n            <Dialog open={open2} onClose={handleClose2} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{isDesc ? question.title : \"Solved by:\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        !isDesc && question.solves.map(f => <DialogContentText key={f} style={{ textAlign: 'justify', whiteSpace: 'pre-line', wordBreak: 'break-word' }}> {f} </DialogContentText>)\r\n                    }\r\n                    {\r\n                        isDesc && <DialogContentText style={{ textAlign: 'justify', whiteSpace: 'pre-line', wordBreak: 'break-word' }}> {question.description} </DialogContentText>\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose2}> Close </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QuestionAdmin;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport QuestionAdmin from \"./QuestionAdmin/QuestionAdmin\";\r\nimport { configs } from \"../../../globals\";\r\nimport { makeStyles, Grid, Container, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root2: {\r\n        flexGrow: 1,\r\n    },\r\n    cent: {\r\n        textAlign: 'center'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst AllQuestions = (props) => {\r\n\r\n    const { history, setLoading, setSnack, openConfirmation,socket } = props;\r\n    const [auth, setAuth] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const [questions, setQuestions] = React.useState([]);\r\n    const [count, setCount] = React.useState(0);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n\r\n    const fetchQuestions = () => {\r\n        setLoading(true);\r\n        if(id !== 'all')\r\n        axios.all([axios.get(`${configs.baseUrl}/admin/getContestQuestion/${id}`), axios.get(`${configs.baseUrl}/admin/getSolves/${id}`)])\r\n            .then(axios.spread((ques, sol) => {\r\n                if (ques.data.status && sol.data.status) {\r\n                    let qs = ques.data.data, co = 0;\r\n                    qs.map(q => {\r\n                        q.solves = [];\r\n                        co += q.points;\r\n                        sol.data.data.forEach(s =>{\r\n                            if(q.title === s.questionTitle)\r\n                                q.solves.push(s.userEmail)\r\n                        });\r\n                    });\r\n                    setQuestions(qs);\r\n                    setCount(co);\r\n                    setLoading(false);\r\n                    setSnack({ show: true, msg: ques.data.message, status: ques.data.status });\r\n                }\r\n                else {\r\n                    setSnack({ show: true, msg: ques.data.message + \" | \" + sol.data.message, status: false });\r\n                    setLoading(false);\r\n                    if(ques.status === 401 || sol.status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n            })).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            );\r\n        else\r\n            axios.get(`${configs.baseUrl}/admin/getAllQuestion`).then(\r\n                result => {\r\n                    if (result.data.status) {\r\n                        let qs = result.data.data, co = 0;\r\n                        qs.forEach(c => co += c.points);\r\n                        setQuestions(qs);\r\n                        setCount(co);\r\n                    }\r\n                    else {\r\n                        if(result.status === 401)\r\n                        {\r\n                            configs.logout(socket);\r\n                        }\r\n                    }\r\n                    setLoading(false);\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            history.push('/');\r\n            setAuth(false);\r\n        }\r\n        else {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|All Questions\";\r\n        }\r\n    }, [configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        setId(props.match.params.cid);\r\n        setLoading(true);\r\n        fetchQuestions();\r\n    }, [props.match.params.cid, auth]);\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h5\" color=\"secondary\" className={classes.cent}>Total Questions: <b>{questions.length}</b></Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"h5\" color=\"secondary\" className={classes.cent}>Total Points: <b>{count}</b></Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Container maxWidth=\"lg\" style={{opacity: 0.9}}>\r\n                <div className={classes.root2}>\r\n                    {\r\n                        questions.length === 0 && <div className=\"force-center\"><i><Typography variant=\"h5\" color=\"secondary\">No questions in this contest yet</Typography></i></div>\r\n                    }\r\n                    <Grid container spacing={5}>\r\n                        {\r\n                            questions.map(q => {\r\n                                return <Grid item sm={4} key={q._id}>\r\n                                    <Paper elevation={10}>\r\n                                        <QuestionAdmin {...props} question={q} fetchQuestions={fetchQuestions} openConfirmation={openConfirmation} setLoading={setLoading} />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuestions;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {makeStyles,IconButton, Container,Divider,Button,Checkbox,Grid,List,Card,CardHeader,ListItem,ListItemText,ListItemIcon} from \"@material-ui/core\";\r\nimport { configs } from \"../../../globals\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n    },\r\n    cardHeader: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n        height: '70vh',\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\nfunction not(a, b) {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nconst QuestionTransfer = (props) => {\r\n\r\n    const { history, setLoading, setSnack, openConfirmation, socket } = props;\r\n\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [checked, setChecked] = React.useState([]);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [left, setLeft] = React.useState([]);\r\n    const [right, setRight] = React.useState([]);\r\n    const [prev, setPrev] = React.useState([]);\r\n    const [ques, setQues] = React.useState([]);\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const saveContestQuestions = () => {\r\n        setLoading(true);\r\n        let finalArr = [];\r\n        ques.forEach(que => {\r\n            if (right.indexOf(que.title) !== -1)\r\n                finalArr.push(que.title);\r\n        });\r\n        let newQuestionTitles = right.filter(r => prev.indexOf(r) === -1);\r\n        axios.post(`${configs.baseUrl}/admin/migrateQuestion/${id}`, { questions: finalArr }).then(\r\n            result => {\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if (result.data.status) {\r\n                    fetchData();\r\n                    if (newQuestionTitles.length)\r\n                        socket.emit('new-question-added', { title: newQuestionTitles, name: result.data.message.split(\":\")[1].trim(), cid: id });\r\n                }\r\n                else {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    const save = () => {\r\n        openConfirmation({ title: \"Confirm\", content: `Save Changes?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: saveContestQuestions })\r\n    };\r\n\r\n    const fetchData = () => {\r\n        axios.all([axios.get(`${configs.baseUrl}/admin/getAllQuestion`), axios.get(`${configs.baseUrl}/admin/getContestQuestion/${id}`)])\r\n            .then(axios.spread((result1, result2) => {\r\n                if (result1.data.status && result2.data.status) {\r\n                    setQues(result1.data.data);\r\n                    let rightArr = [];\r\n                    result2.data.data.forEach(qs => rightArr.push(qs.title));\r\n                    setRight(rightArr);\r\n                    setPrev(rightArr);\r\n                    let leftArr = [];\r\n                    result1.data.data.filter(q => rightArr.indexOf(q.title) === -1).forEach(qs => leftArr.push(qs.title));\r\n                    setLeft(leftArr);\r\n                    setSnack({ show: true, msg: \"Succesfully Retrieved Questions and Contest\", status: true });\r\n                }\r\n                else {\r\n                    setSnack({ show: true, msg: result2.data.message, status: false });\r\n                    if(result1.status === 401 || result2.status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n                setLoading(false);\r\n            })).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = (items) => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRight(right.concat(leftChecked));\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|Question Transfer\";\r\n        }\r\n    },[configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        setLoading(true);\r\n        setId(props.match.params.cid)\r\n        fetchData();\r\n    }, [props.match.params.cid,auth]);\r\n\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0}\r\n                        inputProps={{ 'aria-label': 'all items selected' }}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List className={classes.list} dense component=\"div\" role=\"list\">\r\n                {items.map((value) => {\r\n                    const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n                    return (\r\n                        <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={value} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <Container fixed style={{opacity: 0.9}}>\r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                <Grid item md={5}>{customList('Questions in the Store', left)}</Grid>\r\n                <Grid item md={2}>\r\n                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                        <IconButton\r\n                            className={classes.button}\r\n                            onClick={handleCheckedRight}\r\n                            disabled={leftChecked.length === 0}\r\n                            aria-label=\"move selected right\"\r\n                        >\r\n                            <ChevronRightIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className={classes.button}\r\n                            onClick={handleCheckedLeft}\r\n                            disabled={rightChecked.length === 0}\r\n                            aria-label=\"move selected left\"\r\n                        >\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={5}>{customList('Questions already present', right)}</Grid>\r\n            </Grid>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <Button onClick={save} color=\"secondary\" variant=\"contained\">Save</Button>\r\n            </div>\r\n            <br />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default QuestionTransfer;\r\n","import React from \"react\";\r\nimport { makeStyles, Typography, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n        padding: '5%',\r\n        opacity: 0.9\r\n    }\r\n}));\r\n\r\nconst ErrorPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Typography variant=\"h2\">\r\n                The Page You Requested Does Not Exist !!!<br /><br />Please Go Back and Navigate using the Links and Buttons of the Website :)\r\n            </Typography>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {Grid,List,Card,CardHeader,ListItemIcon,ListItemText,ListItem,Checkbox,Button, Divider,IconButton, Container } from \"@material-ui/core\";\r\nimport { configs } from \"../../../globals\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n    },\r\n    cardHeader: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n        height: '70vh',\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\nfunction not(a, b) {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nconst UserManagement = (props) => {\r\n\r\n    const { history, setLoading, setSnack, openConfirmation, socket } = props;\r\n\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [checked, setChecked] = React.useState([]);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [left, setLeft] = React.useState([]);\r\n    const [right, setRight] = React.useState([]);\r\n    const [prev, setPrev] = React.useState([]);\r\n    const [users, setUsers] = React.useState([]);\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const saveContestUsers = () => {\r\n        setLoading(true);\r\n        let finalArr = [];\r\n        users.forEach(user => {\r\n            if (right.indexOf(user.email) !== -1)\r\n                finalArr.push(user.email);\r\n        });\r\n        let newUserEmails = right.filter(r => prev.indexOf(r) === -1);\r\n        axios.post(`${configs.baseUrl}/admin/addAllowedUser/${id}`, { users: finalArr }).then(\r\n            result => {\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if (result.data.status) {\r\n                    fetchData();\r\n                    if (newUserEmails.length)\r\n                        socket.emit('allowed-users', { users: newUserEmails, name: result.data.message.split(\":\")[1].trim(), cid: id });\r\n                }\r\n                else {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    const save = () => {\r\n        openConfirmation({ title: \"Confirm\", content: `Save Changes?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: saveContestUsers })\r\n    };\r\n\r\n    const fetchData = () => {\r\n        axios.all([axios.get(`${configs.baseUrl}/admin/getAllUsers`), axios.get(`${configs.baseUrl}/admin/getAllowedUsers/${id}`)])\r\n            .then(axios.spread((result1, result2) => {\r\n                if (result1.data.status && result2.data.status) {\r\n                    setUsers(result1.data.data);\r\n                    setRight(result2.data.data);\r\n                    setPrev(result2.data.data);\r\n                    let leftArr = [];\r\n                    result1.data.data.filter(u => result2.data.data.indexOf(u.email) === -1).forEach(us => leftArr.push(us.email));\r\n                    setLeft(leftArr);\r\n                    setSnack({ show: true, msg: \"Succesfully Retrieved Users and Contest\", status: true });\r\n                }\r\n                else {\r\n                    setSnack({ show: true, msg: result2.data.message, status: false });\r\n                    if(result1.status === 401 || result2.status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n                setLoading(false);\r\n            })).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = (items) => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRight(right.concat(leftChecked));\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|User Management\";\r\n        }\r\n    },[configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        setLoading(true);\r\n        setId(props.match.params.cid)\r\n        fetchData();\r\n    }, [props.match.params.cid,auth]);\r\n\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0}\r\n                        inputProps={{ 'aria-label': 'all items selected' }}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List className={classes.list} dense component=\"div\" role=\"list\">\r\n                {items.map((value) => {\r\n                    const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n                    return (\r\n                        <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={value} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <Container fixed style={{opacity: 0.9}}>\r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                <Grid item md={5}>{customList('Users registered in system', left)}</Grid>\r\n                <Grid item md={2}>\r\n                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                        <IconButton\r\n                            className={classes.button}\r\n                            onClick={handleCheckedRight}\r\n                            disabled={leftChecked.length === 0}\r\n                            aria-label=\"move selected right\"\r\n                        >\r\n                            <ChevronRightIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className={classes.button}\r\n                            onClick={handleCheckedLeft}\r\n                            disabled={rightChecked.length === 0}\r\n                            aria-label=\"move selected left\"\r\n                        >\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={5}>{customList('Users already allowed', right)}</Grid>\r\n            </Grid>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <Button onClick={save} color=\"secondary\" variant=\"contained\">Save</Button>\r\n            </div>\r\n            <br />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UserManagement;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const customStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        opacity: 0.9\r\n    },\r\n}));","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { configs } from \"../../../globals\";\r\nimport { customStyles } from \"./Styles\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Typography, TextField, Button, Grid, Paper } from \"@material-ui/core\";\r\n\r\nconst Register = (props) => {\r\n\r\n    const { history, setLoading, setSnack, openConfirmation } = props;\r\n\r\n    const classes = customStyles();\r\n    const [user, setUser] = React.useState({});\r\n    const [ecrs, setECRs] = React.useState([]);\r\n    const [errors, setErrors] = React.useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        contact: \"\",\r\n        rcid: \"\",\r\n        password: \"\"\r\n    });\r\n    const [valid, setValid] = React.useState(false);\r\n\r\n    const register = () => {\r\n        setLoading(true);\r\n        let userData = user;\r\n        Object.keys(userData).forEach(k => userData[k] = k === 'password' ? userData[k] : userData[k].trim());\r\n        axios.post(`${configs.baseUrl}/user/register`, userData).then(result => {\r\n            setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            if(result.data.status) history.push('/');\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchEmailsContacts = () => {\r\n        setLoading(true);\r\n        axios.get(`${configs.baseUrl}/user/fetchECRs`).then(result => {\r\n            if (result.data.status)\r\n                setECRs(result.data.users);\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const validate = (field, value) => {\r\n        let valid = false, msg = \"\", redundant = false;\r\n        switch (field) {\r\n            case 'name':\r\n                valid = /^[A-Za-z ]/.test(value.trim());\r\n                msg = value ? (valid ? \"\" : \"Name must contain only spaces and alphabets\") : \"Name is Required\";\r\n                break;\r\n            case 'email':\r\n                redundant = ecrs.find(ecr => ecr.email === value) !== undefined;\r\n                valid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n                msg = redundant ? \"This Email ID is already registered\" : (value ? (valid ? \"\" : \"Email ID is invalid\") : \"Email ID is Required\");\r\n                break;\r\n            case 'contact':\r\n                redundant = ecrs.find(ecr => ecr.contact === value) !== undefined;\r\n                valid = /^[6-9]{1}[0-9]{9}/.test(value);\r\n                msg = redundant ? \"This Contact is already registered\" : (value ? (valid ? \"\" : \"Contact Number must contain exactly 10 digits\") : \"Contact Number is Required\");\r\n                break;\r\n            case 'rcid':\r\n                redundant = ecrs.find(ecr => ecr.rcid + \"\" === value + \"\") !== undefined;\r\n                valid = value !== \"\";\r\n                msg = redundant ? \"This RC ID is already registered\" : (value ? \"\" : \"RC ID is Required\");\r\n                break;\r\n            case 'password':\r\n                valid = value.trim() !== \"\";\r\n                msg = valid ? \"\" : \"Password is Required!!!\";\r\n                break;\r\n        }\r\n        if (valid && !redundant) {\r\n            setUser({ ...user, [field]: value });\r\n            setErrors({ ...errors, [field]: \"C\" });\r\n        } else\r\n            setErrors({ ...errors, [field]: msg });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setValid(isValidForm());\r\n    }, [errors]);\r\n\r\n    const isValidForm = () => {\r\n        return errors.name === \"C\" && errors.email === \"C\" && errors.contact === \"C\" && errors.rcid === \"C\" && errors.password === \"C\";\r\n    }\r\n\r\n    const reg = () => {\r\n        openConfirmation({ title: \"Confirm\", content: `Sure to Register?`, positiveButtonText: \"Yes, Register\", negativeButtonText: \"No\", cb: register })\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetchEmailsContacts();\r\n        if (configs.isLoggedIn())\r\n            history.push('/');\r\n        else {\r\n            document.title = \"CryptoQuest|Registration\";\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item md={3} className=\"force100\"></Grid>\r\n            <Grid item md={6} className=\"force100\">\r\n                <Paper className={clsx(classes.paper, classes.root)} elevation={10}>\r\n                    <Typography variant=\"h4\" color=\"secondary\">Registration</Typography>\r\n                    <br /><br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r1\" label=\"Full Name *\" type=\"text\" fullWidth onInput={$e => validate('name', $e.target.value)} />\r\n                    <br />\r\n                    {errors.name && errors.name !== \"C\" && <MuiAlert elevation={5} variant=\"outlined\" severity=\"error\">{errors.name}</MuiAlert>}\r\n                    <br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r2\" label=\"Email ID *\" type=\"email\" fullWidth onInput={$e => validate('email', $e.target.value)} />\r\n                    <br />\r\n                    {errors.email && errors.email !== \"C\" && <MuiAlert elevation={5} variant=\"outlined\" severity=\"error\">{errors.email}</MuiAlert>}\r\n                    <br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r3\" label=\"Contact Number *\" type=\"number\" fullWidth onInput={$e => validate('contact', $e.target.value)} />\r\n                    <br />\r\n                    {errors.contact && errors.contact !== \"C\" && <MuiAlert elevation={5} variant=\"outlined\" severity=\"error\">{errors.contact}</MuiAlert>}\r\n                    <br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r4\" label=\"RC ID *\" type=\"number\" fullWidth onInput={$e => validate('rcid', $e.target.value)} />\r\n                    <br />\r\n                    {errors.rcid && errors.rcid !== \"C\" && <MuiAlert elevation={5} variant=\"outlined\" severity=\"error\">{errors.rcid}</MuiAlert>}\r\n                    <br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r5\" label=\"College\" type=\"text\" fullWidth onInput={$e => setUser({ ...user, institueName: $e.target.value })} />\r\n                    <br /><br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r6\" label=\"Stream\" type=\"text\" fullWidth onInput={$e => setUser({ ...user, stream: $e.target.value })} />\r\n                    <br /><br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r7\" label=\"Year\" type=\"number\" fullWidth onInput={$e => setUser({ ...user, year: $e.target.value })} />\r\n                    <br /><br />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"r8\" label=\"Password *\" type=\"password\" fullWidth onInput={$e => validate('password', $e.target.value)} />\r\n                    <br />\r\n                    {errors.password && errors.password !== \"C\" && <MuiAlert elevation={5} variant=\"outlined\" severity=\"error\">{errors.password}</MuiAlert>}\r\n                    <br />\r\n                    <Button variant=\"contained\" onClick={reg} color=\"secondary\" disabled={!valid}> Register  </Button>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item md={3} className=\"force100\"></Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport {withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  \r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n\r\n  function Row(props) {\r\n    const { k,i,openConfirmation,setLoading,setSnack,fetchUsers} = props;\r\n    \r\n    const deleteUser = () => {\r\n        setLoading(true);\r\n        axios.delete(`${configs.baseUrl}/admin/deleteUser/${k.email}`).then(\r\n            result=> {\r\n                if(result.data.status)\r\n                {\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                    fetchUsers();\r\n                }\r\n                else\r\n                {\r\n                    setLoading(false);\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({show: true, msg: \"Failed to Connect to the Server...\", status: false})\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const delU = () => {\r\n        openConfirmation({title: \"Confirm\", content: `Sure to Delete the User ${k.email}?`, positiveButtonText: \"YES\", negativeButtonText: \"NO\", cb: deleteUser})\r\n    }\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <StyledTableRow key={k.email}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n                {i+1}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.name}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.email}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.rcid}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.stream}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.year}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.instituteName}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{k.contact}</StyledTableCell>\r\n            <StyledTableCell align=\"center\"><IconButton color=\"secondary\" onClick={delU}><DeleteIcon/></IconButton></StyledTableCell>\r\n        </StyledTableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nconst UserDetails = (props) => {\r\n    const { history, setLoading, setSnack, openConfirmation,socket} = props;\r\n    const classes = useStyles();\r\n    const [userlist, setUserlist] = React.useState([]);\r\n    const [auth, setAuth] = React.useState(false);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|Userlist\";\r\n        }\r\n    },[configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        setLoading(true);\r\n        fetchUsers();\r\n    }, [auth]);\r\n\r\n    const fetchUsers = () => {\r\n        axios.get(`${configs.baseUrl}/admin/getAllUsers`).then(\r\n            result => {\r\n                if(result.data.status)\r\n                {\r\n                    let users = result.data.data;\r\n                    setUserlist(users);\r\n                }\r\n                else\r\n                {\r\n                    if(result.status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({show: true, msg: \"Failed to Connect to the Server...\", status: false})\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {userlist.length !== 0 && <TableContainer component={Paper} elevation={10} style={{opacity: 0.9}}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <StyledTableCell>#</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Name</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Email ID&nbsp;</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">RC ID</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Stream</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Year</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">College</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Contact</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Actions</StyledTableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {userlist.map((k,i) => (\r\n                    <Row key={k.email} k={k} i={i} openConfirmation={openConfirmation} setLoading={setLoading} setSnack={setSnack} fetchUsers={fetchUsers}/>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetails;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport {withStyles,makeStyles,Collapse,IconButton,Typography,Table,TableRow,TableBody, TableCell,TableContainer,TableHead,Paper,Card,CardContent} from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  }\r\n});\r\n\r\nfunction Row(props) {\r\n  const { row,i } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledTableRow className={classes.root}>\r\n        <StyledTableCell>\r\n          {i+1}\r\n        </StyledTableCell>\r\n        <StyledTableCell component=\"th\" scope=\"row\">\r\n          {row.email}<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n          <Collapse style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6} in={open} timeout=\"auto\" unmountOnExit>\r\n              <Card className={classes.root} elevation={5}>\r\n                  <CardContent>\r\n                      <Typography className={classes.title} color=\"textPrimary\">\r\n                      <b>Name:</b> {row.name}<br /><b>Contact #:</b> {row.contact}<br /><b>College:</b> {row.instituteName}\r\n                      </Typography>\r\n                  </CardContent>\r\n              </Card>\r\n          </Collapse>\r\n        </StyledTableCell>\r\n        <StyledTableCell hidden align=\"center\">{row.name}</StyledTableCell>\r\n        <StyledTableCell hidden align=\"center\">{row.contact}</StyledTableCell>\r\n        <StyledTableCell hidden align=\"center\">{row.instituteName}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{row.questions.map((q, i) => <span key={q}>{i > 0 ? \", \" : \"\"}{q}</span>)}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{row.questions.length}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">{row.points}</StyledTableCell>\r\n      </StyledTableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst AdminRanking = (props) => {\r\n    const { history,setLoading, setSnack,socket} = props;\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [ranklist, setRanklist] = React.useState([]);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [fetched, setFetched] = React.useState(false);\r\n\r\n    const fetchSolutions = () => {\r\n      setFetched(false);\r\n        axios.get(`${configs.baseUrl}/admin/getSolutions/${id}`).then(\r\n            result => {\r\n                if (result.data.status) {\r\n                    let solutions = result.data.data;\r\n                    var userPoints = [];\r\n                    let users = [];\r\n                    if(solutions.length >0)\r\n                    {\r\n                        solutions.forEach(sol => {\r\n                            var userI = users.indexOf(sol.userEmail);\r\n                            if (userI === -1) {\r\n                                users = [...users, sol.userEmail];\r\n                                var newUserPoint = {\r\n                                    'email': sol.userEmail,\r\n                                    'points': sol.points,\r\n                                    'questions': [sol.questionTitle],\r\n                                    'createdAt': sol.createdAt,\r\n                                    'name': sol.name,\r\n                                    'contact': sol.contact,\r\n                                    'instituteName': sol.instituteName\r\n                                }\r\n                                userPoints.push(newUserPoint);\r\n                            }\r\n                            else {\r\n                                userPoints[userI].points += sol.points;\r\n                                userPoints[userI].questions = [...userPoints[userI].questions, sol.questionTitle];\r\n                                userPoints[userI].createdAt = sol.createdAt;\r\n                            }\r\n                        });\r\n                        //Sort in terms of points\r\n                        userPoints.sort(function (a, b) {\r\n                            // return ((a.points < b.points) ? 1 : -1);\r\n                            if (a.points < b.points)\r\n                                return 1;\r\n                            else if (a.points === b.points && a.createdAt > b.createdAt)\r\n                                return 1;\r\n                            else\r\n                                return -1;\r\n                        });\r\n                        setRanklist(userPoints);\r\n                        setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                        setLoading(false);\r\n                    }\r\n                    else\r\n                        setLoading(false);\r\n                    setFetched(true);\r\n                }\r\n                else\r\n                {\r\n                    setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                    setLoading(false);\r\n                    if(result.status === 401)\r\n                      configs.logout(socket);\r\n                }\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false })\r\n                setLoading(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isLoggedIn()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else\r\n        {\r\n            setAuth(true);\r\n            document.title=\"CryptoQuest|Ranking\"\r\n        }\r\n    },[configs.isAdmin()]);\r\n\r\n    React.useEffect(() => {\r\n        if(auth)\r\n        {\r\n            setLoading(true);\r\n            fetchSolutions();\r\n        }  \r\n    }, [auth]);\r\n\r\n    return (\r\n        <>\r\n            {/* \r\n            <ReactHTMLTableToExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"download-table-xls-button\"\r\n                table=\"table-to-xls\"\r\n                filename=\"ranklist\"\r\n                sheet=\"tablexls\"\r\n                buttonText=\"Download as XLS\" />\r\n            */}\r\n            {ranklist.length !==0 && <TableContainer component={Paper} elevation={10} style={{opacity: 0.9}}>\r\n            <Table aria-label=\"collapsible table\" id=\"table-to-xls\">\r\n                <TableHead>\r\n                <StyledTableRow>\r\n                    <StyledTableCell>#</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">Email ID&nbsp;</StyledTableCell>\r\n                    <StyledTableCell hidden align=\"center\">Name</StyledTableCell>\r\n                    <StyledTableCell hidden align=\"center\">Contact</StyledTableCell>\r\n                    <StyledTableCell hidden align=\"center\">Institute Name</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">&nbsp;Solved Questions</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">No of Questions Solved</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">Points</StyledTableCell>\r\n                </StyledTableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {ranklist.map((k,i) => (\r\n                    <Row key={k.email} row={k} i={i} />\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>}\r\n            {ranklist.length === 0 && fetched && <Typography paragraph variant=\"h4\" display=\"block\" color=\"secondary\" align=\"center\">\r\n                <b>No user has solved any questions</b>\r\n            </Typography>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminRanking;\r\n","import React from \"react\";\r\nimport { Toolbar, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst customStyles = makeStyles(theme => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst ClockAndConnection = (props) => {\r\n\r\n    const {globalTime, error, notification, setNotification} = props;\r\n\r\n    const classes = customStyles();\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    const closeNotification = (open) => {\r\n        if (open)\r\n            notification.cb();\r\n        setNotification({ open: false, message: \"\", buttonText: \"\", cb: null });\r\n    };\r\n\r\n    return <Toolbar>\r\n        {error !== 1 && <Alert severity=\"error\" variant=\"filled\">Failed to Connect to the Server... Either Internet Connection is Poor, Or Server is Unavailable</Alert>}\r\n        {notification.open && <Alert elevation={5} variant=\"outlined\" severity=\"warning\" action={<>{notification.buttonText!==''&&<Button onClick={() => closeNotification(true)}>{notification.buttonText}</Button>}<Button onClick={() => closeNotification(false)}>&#10006;</Button></>}>\r\n          {notification.message}\r\n        </Alert>}\r\n        <Typography variant=\"h6\" noWrap className={classes.title}>{\"\"}</Typography>\r\n        <Alert elevation={5} severity=\"info\" variant=\"outlined\">{dateTimeFormat.format(new Date(globalTime))}</Alert>\r\n    </Toolbar>\r\n};\r\n\r\nexport default ClockAndConnection;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport \"./Styles.css\";\r\nimport { configs } from \"../../../globals\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { makeStyles, Container, IconButton, InputAdornment, FormControl, InputLabel, Input } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: theme.palette.background.paper,\r\n        height: window.screen.height * 0.56,\r\n        overflowY: 'auto',\r\n        opacity: 0.9\r\n    },\r\n    self: {\r\n        marginLeft: 'auto',\r\n        maxWidth: '70%',\r\n        width: 'max-content'\r\n    },\r\n    others: {\r\n        marginRight: 'auto',\r\n        maxWidth: '70%',\r\n        width: 'max-content'\r\n    },\r\n    typer: {\r\n        background: theme.palette.background.paper,\r\n        paddingTop: window.screen.height * 0.02,\r\n        paddingBottom: window.screen.height * 0.02\r\n    }\r\n}));\r\n\r\nconst Discussions = (props) => {\r\n\r\n    const { history, globalTime, setLoading, setSnack, socket, discussions, setDiscussions } = props;\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    const [message, setMessage] = React.useState('')\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const arena = React.useRef(null);\r\n    const classes = useStyles();\r\n\r\n    const addDiscussion = () => {\r\n        let msg = { sender: 'ADMIN', message: message.trim(), createdAt: globalTime };\r\n        socket.emit('discussion', { cid: id, msg });\r\n        setDiscussions((prevDisc) => ({\r\n            ...prevDisc,\r\n            [`${id}`]: [...prevDisc[`${id}`] || [], msg]\r\n        }));\r\n        axios.post(`${configs.baseUrl}/admin/addDiscussion/${id}`, msg).then(result => {\r\n            if (result.data.status)\r\n                setMessage('')\r\n            else\r\n                setSnack({ show: true, msg: result.data.message + \" | Please Reload the Page\", status: result.data.status });\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n        });\r\n    }\r\n\r\n    const fetchDiscussions = () => {\r\n        axios.get(`${configs.baseUrl}/admin/getAllDiscussion/${id}`).then(\r\n            result => {\r\n                if (result.data.status)\r\n                    setDiscussions({ ...discussions, [id]: result.data.data });\r\n                else {\r\n                    if (result.status === 401)\r\n                        configs.logout(socket);\r\n                    setLoading(false);\r\n                }\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        else {\r\n            if (discussions[id]) return;\r\n            setLoading(true);\r\n            fetchDiscussions();\r\n        }\r\n    }, [auth,discussions]);\r\n\r\n    React.useEffect(() => {\r\n        if (arena !== null && discussions[id]) {\r\n            setLoading(false);\r\n            arena.current.scrollIntoView({ behaviour: 'smooth' });\r\n        }\r\n    }, [arena, discussions]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Discussions\"\r\n        }\r\n    }, [configs.isAdmin()]);\r\n\r\n    return (\r\n        <>\r\n            <Container fixed className={classes.root}>\r\n                {\r\n                    id && discussions[id] && discussions[id].map(r => <React.Fragment key={r.createdAt}>\r\n                        <div className={clsx('sender', { 'sender-self': r.sender === 'ADMIN', 'sender-other': r.sender !== 'ADMIN', 's-admin': r.sender === 'ADMIN' })}>\r\n                            {r.sender}\r\n                        </div>\r\n                        <div className={clsx('bubble', { 'self': r.sender === 'ADMIN', 'other': r.sender !== 'ADMIN', 'admin': r.sender === 'ADMIN' })} dangerouslySetInnerHTML={{__html: r.message.replace(/\\n/g,\"<br />\")}}></div>\r\n                        <div className={clsx('sender', { 'sender-self': r.sender === 'ADMIN', 'sender-other': r.sender !== 'ADMIN' })}>\r\n                            {dateTimeFormat.format(new Date(r.createdAt))}\r\n                        </div>\r\n                        <br />\r\n                    </React.Fragment>)\r\n                }\r\n                <div ref={arena}></div>\r\n            </Container>\r\n            <Container fixed className={classes.typer}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Type your query here...</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-password\"\r\n                        onInput={$e => setMessage($e.target.value)}\r\n                        value={message.trimLeft()}\r\n                        multiline\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\"> <IconButton onClick={addDiscussion} aria-label=\"toggle password visibility\" disabled={message.trim() === ''}> <SendIcon /> </IconButton> </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Discussions;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport \"./Styles.css\";\r\nimport { configs } from \"../../../globals\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { makeStyles, Container, IconButton, InputAdornment, FormControl, InputLabel, Input } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: theme.palette.background.paper,\r\n        height: window.screen.height * 0.56,\r\n        overflowY: 'auto',\r\n        opacity: 0.9\r\n    },\r\n    self: {\r\n        marginLeft: 'auto',\r\n        maxWidth: '70%',\r\n        width: 'max-content'\r\n    },\r\n    others: {\r\n        marginRight: 'auto',\r\n        maxWidth: '70%',\r\n        width: 'max-content'\r\n    },\r\n    typer: {\r\n        background: theme.palette.background.paper,\r\n        paddingTop: window.screen.height * 0.02,\r\n        paddingBottom: window.screen.height * 0.02\r\n    }\r\n}));\r\n\r\nconst Discussion = (props) => {\r\n\r\n    const { history, globalTime, setLoading, setSnack, socket, discussions, setDiscussions } = props;\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\r\n    const [message, setMessage] = React.useState('')\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const arena = React.useRef(null);\r\n    const classes = useStyles();\r\n\r\n    const addDiscussion = () => {\r\n        let msg = { sender: configs.getEmail(), message: message.trim(), createdAt: globalTime };\r\n        socket.emit('discussion', { cid: id, msg });\r\n        setDiscussions((prevDisc) => ({\r\n            ...prevDisc,\r\n            [`${id}`]: [...prevDisc[`${id}`] || [], msg]\r\n        }));\r\n        axios.post(`${configs.baseUrl}/common/addDiscussion/${id}`, msg).then(result => {\r\n            if (result.data.status)\r\n                setMessage('')\r\n            else\r\n                setSnack({ show: true, msg: result.data.message + \" | Please Reload the Page\", status: result.data.status });\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n        });\r\n    }\r\n\r\n    const fetchDiscussions = () => {\r\n        axios.get(`${configs.baseUrl}/common/getAllDiscussion/${id}`).then(\r\n            result => {\r\n                if (result.data.status)\r\n                    setDiscussions({ ...discussions, [id]: result.data.data });\r\n                else {\r\n                    if (result.status === 401)\r\n                        configs.logout(socket);\r\n                    setLoading(false);\r\n                }\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(!auth)   return;\r\n        else {\r\n            if (discussions[id]) return;\r\n            setLoading(true);\r\n            fetchDiscussions();\r\n        }\r\n    }, [auth,discussions]);\r\n\r\n    React.useEffect(() => {\r\n        if (arena !== null && discussions[id]) {\r\n            setLoading(false);\r\n            arena.current.scrollIntoView({ behaviour: 'smooth' });\r\n        }\r\n    }, [arena, discussions]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Discussion\"\r\n        }\r\n    }, [configs.isUser()]);\r\n\r\n    return (\r\n        <>\r\n            <Container fixed className={classes.root}>\r\n                {\r\n                    id && discussions[id] && discussions[id].map(r => <React.Fragment key={r.createdAt}>\r\n                        <div className={clsx('sender', { 'sender-self': r.sender === configs.getEmail(), 'sender-other': r.sender !== configs.getEmail(), 's-admin': r.sender === 'ADMIN' })}>\r\n                            {r.sender}\r\n                        </div>\r\n                        <div className={clsx('bubble', { 'self': r.sender === configs.getEmail(), 'other': r.sender !== configs.getEmail(), 'admin': r.sender === 'ADMIN' })} dangerouslySetInnerHTML={{__html: r.message.replace(/\\n/g,\"<br />\")}}></div>\r\n                        <div className={clsx('sender', { 'sender-self': r.sender === configs.getEmail(), 'sender-other': r.sender !== configs.getEmail() })}>\r\n                            {dateTimeFormat.format(new Date(r.createdAt))}\r\n                        </div>\r\n                        <br />\r\n                    </React.Fragment>)\r\n                }\r\n                <div ref={arena}></div>\r\n            </Container>\r\n            <Container fixed className={classes.typer}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Type your query here...</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-password\"\r\n                        onInput={$e => setMessage($e.target.value)}\r\n                        value={message.trimLeft()}\r\n                        multiline\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\"> <IconButton onClick={addDiscussion} aria-label=\"toggle password visibility\" disabled={message.trim() === ''}> <SendIcon /> </IconButton> </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Discussion;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText, Container, IconButton, InputAdornment, FormControl, InputLabel, Input, Paper } from '@material-ui/core';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    message: {\r\n        color: theme.palette.text.primary,\r\n        marginRight: 'auto',\r\n        width: '100%',\r\n    },\r\n    timest: {\r\n        marginLeft: 'auto',\r\n        color: theme.palette.text.secondary\r\n    },\r\n}));\r\n\r\nconst Announcements = (props) => {\r\n    const { history,globalTime, setLoading, setSnack, socket,announcements, setAnnouncements} = props;\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    const [msg, setMsg] = React.useState('');\r\n\r\n    const addAnnouncement = () => {\r\n        let message = { message: msg.trim(), createdAt: globalTime };\r\n        socket.emit('announcement', { cid: id, msg:message });\r\n        setAnnouncements((prevAnnounce) => ({\r\n            ...prevAnnounce,\r\n            [`${id}`]: [message,...prevAnnounce[`${id}`] || []]\r\n        }));\r\n        axios.post(`${configs.baseUrl}/admin/addAnnouncement/${id}`, {\r\n            message: msg.trim()\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n                setMsg('')\r\n            }\r\n            else\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const fetchAnnouncements = () => {\r\n        axios.get(`${configs.baseUrl}/admin/getAllAnnouncement/${id}`).then(\r\n            result => {\r\n                if (result.data.status) {\r\n                    setAnnouncements({ ...announcements, [id]: result.data.data.reverse() });\r\n                    setMsg('');\r\n                }\r\n                else\r\n                    if (result.status === 401)\r\n                        configs.logout(socket);\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        else {\r\n            if (announcements[id]) return;\r\n            setLoading(true);\r\n            fetchAnnouncements();\r\n        }\r\n    }, [auth,announcements]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Admin|Announcements\"\r\n        }\r\n    }, [configs.isAdmin()]);\r\n\r\n    return (\r\n        <Container fixed style={{opacity: 0.9}}>\r\n            <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"standard-adornment-password\">Type your announcement here...</InputLabel>\r\n                <Input\r\n                    id=\"standard-adornment-password\"\r\n                    onInput={$e => setMsg($e.target.value)}\r\n                    value={msg.trimLeft()}\r\n                    multiline\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\"> <IconButton onClick={addAnnouncement} aria-label=\"toggle password visibility\" disabled={msg.trim() === \"\"}> <RecordVoiceOverIcon /> </IconButton> </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n            {id && announcements[id] && \r\n            <List className={classes.root}>\r\n                {\r\n                    announcements[id].map(a => <React.Fragment key={a.createdAt}><br />\r\n                        <Paper elevation={10}>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.message}>\r\n                                    <span dangerouslySetInnerHTML={{ __html: a.message.replace(/\\n/g,\"<br />\") }}></span>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <div className={classes.timest}> {dateTimeFormat.format(new Date(a.createdAt))} </div>\r\n                            </ListItem>\r\n                        </Paper>\r\n                    </React.Fragment>)\r\n                }\r\n            </List>}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Announcements;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText, Container, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    message: {\r\n        color: theme.palette.text.primary,\r\n        marginRight: 'auto',\r\n        width: '100%',\r\n    },\r\n    timest: {\r\n        marginLeft: 'auto',\r\n        color: theme.palette.text.secondary\r\n    },\r\n}));\r\n\r\nconst Announcement = (props) => {\r\n    const { history, setLoading, setSnack, socket,announcements, setAnnouncements} = props;\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [id, setId] = React.useState(props.match.params.cid);\r\n    \r\n    const fetchAnnouncements = () => {\r\n        axios.get(`${configs.baseUrl}/common/getAllAnnouncement/${id}`).then(\r\n            result => {\r\n                if (result.data.status) {\r\n                    setAnnouncements({ ...announcements, [id]: result.data.data.reverse() });\r\n                }\r\n                else\r\n                    if (result.status === 401)\r\n                        configs.logout(socket);\r\n                setLoading(false);\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n            }\r\n        ).catch(\r\n            error => {\r\n                setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                setLoading(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        else {\r\n            if (announcements[id]) return;\r\n            setLoading(true);\r\n            fetchAnnouncements();\r\n        }\r\n    }, [auth,announcements]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Announcement\"\r\n        }\r\n    }, [configs.isUser()]);\r\n\r\n    return (\r\n        <Container fixed style={{opacity: 0.9}}>\r\n            {id && announcements[id] && \r\n            <List className={classes.root}>\r\n                {\r\n                    announcements[id].map(a => <React.Fragment key={a.createdAt}><br />\r\n                        <Paper elevation={10}>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.message}>\r\n                                    <span dangerouslySetInnerHTML={{ __html: a.message.replace(/\\n/g,\"<br />\") }}></span>\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <div className={classes.timest}> {dateTimeFormat.format(new Date(a.createdAt))} </div>\r\n                            </ListItem>\r\n                        </Paper>\r\n                    </React.Fragment>)\r\n                }\r\n            </List>}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Announcement;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper, Grid, Typography, Card, CardContent, TableCell, TableRow, TableContainer, Table, TableBody, withStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: '1%'\r\n    },\r\n    cent: {\r\n        textAlign: 'center'\r\n    },\r\n    label: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst Profile = (props) => {\r\n    const { history, setLoading, setSnack, socket } = props;\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { weekday: 'long', year: 'numeric', month: 'long', day: '2-digit', hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [contestInfo, setContestInfo] = React.useState([]);\r\n    const [userInfo, setUserInfo] = React.useState({});\r\n\r\n    const fetchProfile = () => {\r\n        axios.get(`${configs.baseUrl}/common/getPoints`)\r\n            .then(({status, data}) => {\r\n                if (data.status) {\r\n                    setUserInfo(JSON.parse(atob(localStorage.getItem('token').split(\".\")[1])));\r\n                    let cInfo = [];\r\n                    JSON.parse(localStorage.getItem('contestInfo')).forEach(cn => cInfo.push({\r\n                        name: cn,\r\n                        points: data.data.find(cp => cp._id === cn)?.totalPoints || 0\r\n                    }));\r\n                    setContestInfo(cInfo);\r\n                    setSnack({ show: true, msg: \"Profile Information Retrieved :)\", status: true });\r\n                }\r\n                else {\r\n                    setSnack({ show: true, msg: data.message, status: false });\r\n                    if (status === 401)\r\n                        configs.logout(socket);\r\n                }\r\n                setLoading(false);\r\n            }).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n        else {\r\n            setLoading(true);\r\n            fetchProfile();\r\n        }\r\n    }, [auth]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isUser()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Profile\"\r\n        }\r\n    }, [configs.isUser()]);\r\n\r\n    return (\r\n        <Container fixed style={{opacity: 0.9}}>\r\n            <br />\r\n            <Grid container spacing={10}>\r\n                <Grid item md={6}>\r\n                    <Typography variant=\"h4\" color=\"primary\" className={classes.cent}>My Profile</Typography>\r\n                    <br />\r\n                    <TableContainer component={Paper} elevation={10}>\r\n                        <Table aria-label=\"customized table\">\r\n                            <TableBody>\r\n                                {userInfo.name && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Name:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.name}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.email && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Email ID:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.email}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.contact && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Contact:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.contact}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.rcid && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>RC ID:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.rcid}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.hasOwnProperty('stream') && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Stream:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.stream ? userInfo.stream : '- - -'}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.hasOwnProperty('year') && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Year:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.year ? userInfo.year : '- - -'}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.hasOwnProperty('instituteName') && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>College:</StyledTableCell>\r\n                                    <StyledTableCell>{userInfo.instituteName ? userInfo.instituteName : '- - -'}</StyledTableCell>\r\n                                </TableRow>}\r\n                                {userInfo.createdAt && <TableRow>\r\n                                    <StyledTableCell className={classes.label}>Registration Time:</StyledTableCell>\r\n                                    <StyledTableCell>{dateTimeFormat.format(new Date(userInfo.createdAt))}</StyledTableCell>\r\n                                </TableRow>}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <Typography variant=\"h4\" color=\"secondary\" className={classes.cent}>Registered Contests</Typography>\r\n                    <br />\r\n                    <Grid container spacing={5}>\r\n                        {\r\n                            contestInfo.map(c => <React.Fragment key={c.name}>\r\n                                <Grid item sm={6} className={classes.cent}>\r\n                                    <Paper elevation={10}>\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Typography color=\"textSecondary\"> {c.name} </Typography>\r\n                                                <br />\r\n                                                <Typography variant=\"h4\">{c.points}</Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <br />\r\n                            </React.Fragment>)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../../../globals\";\r\nimport \"./Styles.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography, TextField, Button, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: '1%'\r\n    },\r\n    cent: {\r\n        textAlign: 'center'\r\n    },\r\n    label: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}));\r\n\r\nconst ServerControl = (props) => {\r\n    const { history, setLoading, setSnack, socket } = props;\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [logs, setLogs] = React.useState(\"\");\r\n    const [command, setCommand] = React.useState(\"\");\r\n\r\n    const execCommand = () => {\r\n        axios.post(`${configs.baseUrl}/access/csoenrtvreorl`,{command})\r\n            .then(result => {\r\n                setSnack({ show: true, msg: result.data.message, status: result.data.status });\r\n                if (result.data.status) {\r\n                    setCommand(\"\");\r\n                    setLogs(prevLogs => prevLogs + \"<br /><br />--------OUTPUT--------<br /><br />\" + result.data.data.trim());\r\n                }\r\n                else\r\n                    setLogs(prevLogs => prevLogs + \"<br /><br />--------OUTPUT--------<br /><br />\" + result.data.stderr.trim());\r\n                setLoading(false);\r\n            }).catch(\r\n                error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (!auth) return;\r\n    }, [auth]);\r\n\r\n    React.useEffect(() => {\r\n        if (!configs.isAdmin()) {\r\n            setAuth(false);\r\n            history.push('/');\r\n        } else {\r\n            setAuth(true);\r\n            document.title = \"CryptoQuest|Server Control\"\r\n        }\r\n    }, [configs.isAdmin()]);\r\n\r\n    return (\r\n        <Container fixed>\r\n            <br />\r\n            <Grid container spacing={10}>\r\n                <Grid item md={6} component={Paper} style={{opacity: 0.9}}>\r\n                    <Typography variant=\"h4\" color=\"secondary\" className={classes.cent}>Run Command</Typography>\r\n                    <br />\r\n                    <TextField className=\"command-arena\" fullWidth label=\"Type the command here\" multiline onChange={$e => setCommand($e.target.value)} value={command} />\r\n                    <br />\r\n                    <br />\r\n                    <div className={classes.cent}>\r\n                        <Button onClick={execCommand} disabled={command === \"\"}>RUN</Button>\r\n                        <Button onClick={() => setLogs(\"\")}>CLEAR LOGS</Button>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item md={6} component={Paper} style={{opacity: 0.9}}>\r\n                    <Typography variant=\"h4\" color=\"primary\" className={classes.cent}>Logs</Typography>\r\n                    <br />\r\n                    <div className=\"command-arena\" dangerouslySetInnerHTML={{__html: logs.replace(/\\r\\n/g,\"<br />\").replace(/\\n/g,\"<br />\")}}></div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ServerControl;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\nimport { configs } from \"../globals\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DvrIcon from '@material-ui/icons/Dvr';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { ListItemIcon, ListItemText, Typography, Toolbar, CssBaseline, AppBar, Drawer, Divider, List, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { Button, Dialog, DialogTitle, TextField, DialogActions, DialogContent, ListItem, Tooltip, withStyles } from \"@material-ui/core\";\r\nimport \"../App.css\";\r\nimport AddQuestion from \"./admin/AddQuestion/AddQuestion\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ViewQuestion from \"./user/ViewQuestion/ViewQuestion\";\r\nimport Home from \"./common/Home/Home\";\r\nimport Ranking from \"./user/Ranking/Ranking\";\r\nimport AddContest from \"./admin/AddContest/AddContest\";\r\nimport Contests from \"./user/Contests/Contests\";\r\nimport AllContests from \"./admin/AllContests/AllContests\";\r\nimport AllQuestions from \"./admin/AllQuestions/AllQuestions\";\r\nimport QuestionTransfer from \"./admin/QuestionTransfer/QuestionTransfer\";\r\nimport ErrorPage from \"./common/ErrorPage/ErrorPage\";\r\nimport UserManagement from \"./admin/UserManagement/UserManagement\";\r\nimport Register from \"./common/Register/Register\";\r\nimport UserDetails from \"./admin/UserDetails/UserDetails\";\r\nimport AdminRanking from './admin/RankingAdmin/RankingAdmin';\r\nimport ClockAndConnection from './common/ClockAndConnection/ClockAndConnection';\r\nimport Discussions from './admin/Discussions/Discussions';\r\nimport Discussion from './user/Discussion/Discussion';\r\nimport Announcements from './admin/Announcements/Announcements';\r\nimport Announcement from './user/Announcement/Announcement';\r\nimport Profile from './user/Profile/Profile';\r\nimport ServerControl from './admin/ServerControl/ServerControl';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst customStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        opacity: 0.9\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    dangerLink: {\r\n        background: 'red',\r\n        color: 'white'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 5,\r\n        position: 'fixed'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.appBar + 1,\r\n        color: '#fff',\r\n        position: 'fixed'\r\n    },\r\n}));\r\n\r\nconst BaseComponent = (props) => {\r\n\r\n    const { history, tcs, setLoading, setSnack, socket, createSocket } = props;\r\n    const classes = customStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [openD, setOpenD] = React.useState(false);\r\n    const [pswd, setPswd] = React.useState(\"\");\r\n\r\n    const submit = () => {\r\n        setLoading(true);\r\n        axios.post(`${configs.baseUrl}/user/login`, {\r\n            email: email,\r\n            password: pswd\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n                localStorage.setItem('token', result.data.token);\r\n                axios.get(`${configs.baseUrl}/${configs.isAdmin() ? 'admin' : 'common'}/getAllowedContestName`).then(result2 => {\r\n                    if (result2.data.status) {\r\n                        let ids = [];\r\n                        result2.data.data.forEach(d => ids.push(d.name));\r\n                        localStorage.setItem('contestInfo', JSON.stringify(ids));\r\n                        setSnack({ show: true, msg: \"Logged in Successfully\", status: true });\r\n                        createSocket();\r\n                    }\r\n                    else {\r\n                        setSnack({ show: true, msg: result2.data.message, status: false });\r\n                        setLoading(false);\r\n                    }\r\n                }).catch(error => {\r\n                    setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n                    setLoading(false);\r\n                });\r\n            }\r\n            else {\r\n                setSnack({ show: true, msg: result.data.message, status: false });\r\n                setLoading(false);\r\n            }\r\n        }).catch(error => {\r\n            setSnack({ show: true, msg: \"Failed to Connect to the Server...\", status: false });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        setLoading(true);\r\n        socket.disconnect();\r\n        setTimeout(() => { }, 1500);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('contestInfo');\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1500);\r\n    };\r\n\r\n    const toggleDrawer = () => setOpen(!open);\r\n\r\n    const handleClose = (login) => {\r\n        setOpenD(false);\r\n        if (login)\r\n            submit();\r\n    };\r\n\r\n    const handleClickOpen = () => setOpenD(true);\r\n\r\n    const forceReload = () => tcs.emit('force-reload-init');\r\n\r\n    const routing = (path) => history.push(path);\r\n\r\n    React.useEffect(() => {\r\n        if (history.location.pathname === '/') {\r\n            document.title = \"CryptoQuest\";\r\n        }\r\n    })\r\n\r\n    const HtmlTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: theme.palette.background.default,\r\n            color: theme.palette.text.primary,\r\n            maxWidth: 220,\r\n            fontSize: theme.typography.pxToRem(12),\r\n            border: '1px solid #dadde9',\r\n        },\r\n    }))(Tooltip);\r\n\r\n    return (\r\n        <><Route exact path={\"*\"}><div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar)} >\r\n                <Toolbar>\r\n                    <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={toggleDrawer} edge=\"start\" className={clsx(classes.menuButton)}> <MenuIcon /> </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>{configs.isLoggedIn() ? configs.getEmail() : \"CryptoQuest\"}</Typography>\r\n                    {!configs.isLoggedIn() && <Button variant=\"outlined\" color=\"inherit\" onClick={handleClickOpen}>Login</Button>}\r\n                    {configs.isLoggedIn() && <Button variant=\"outlined\" color=\"inherit\" onClick={logout}>Logout</Button>}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer className={classes.drawer} variant=\"persistent\" open={open} classes={{ paper: classes.drawerPaper, }} >\r\n                <div className={classes.drawerContainer}>\r\n                    <Toolbar />\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button onClick={() => routing('/')}><ListItemIcon><HomeIcon /></ListItemIcon><ListItemText>Home</ListItemText></ListItem>\r\n                        {!configs.isLoggedIn() && <ListItem button onClick={() => routing('/register')}><ListItemIcon><HowToRegIcon /></ListItemIcon><ListItemText>Register</ListItemText></ListItem>}\r\n                        {configs.isUser() && <>\r\n                        <ListItem button onClick={() => routing('/contests')}><ListItemIcon><DvrIcon /></ListItemIcon><ListItemText>Contests</ListItemText></ListItem>\r\n                        <ListItem button onClick={() => routing('/profile')}><ListItemIcon><PersonIcon /></ListItemIcon><ListItemText>Profile</ListItemText></ListItem>\r\n                        </>}\r\n                    </List>\r\n                    {configs.isAdmin() && <>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button onClick={() => routing('/contest/new')}><ListItemIcon><AddIcon /></ListItemIcon><ListItemText>Create Contest</ListItemText></ListItem>\r\n                            <ListItem button onClick={() => routing('/allcontests')}><ListItemIcon><DvrIcon /></ListItemIcon><ListItemText>All Contests</ListItemText></ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button onClick={() => routing('/question/notselected/new')}><ListItemIcon><AddIcon /></ListItemIcon><ListItemText>Add Question</ListItemText></ListItem>\r\n                            <ListItem button onClick={() => routing('/allquestions/all')}><ListItemIcon><AssignmentIcon /></ListItemIcon><ListItemText>All Questions</ListItemText></ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button onClick={() => routing('/userlist')}><ListItemIcon><PeopleAltIcon /></ListItemIcon><ListItemText>All User Details</ListItemText></ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button onClick={() => routing('/servercontrol')}><ListItemIcon><SettingsIcon /></ListItemIcon><ListItemText>Server Control</ListItemText></ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                            <HtmlTooltip\r\n                                title={\r\n                                    <React.Fragment>\r\n                                        <Typography color=\"inherit\">Danger !!!</Typography>\r\n                                        <em>{\"Clicking this will\"}</em> <span style={{ color: 'red' }}><b>{'RELOAD ALL BROWSER WINDOWS'}</b></span> <em>{'currently open for this portal.'}.</em>\r\n                                    </React.Fragment>\r\n                                }\r\n                            ><ListItem button onClick={forceReload} className={classes.dangerLink}><ListItemIcon><RefreshIcon /></ListItemIcon><ListItemText>Refresh ALL</ListItemText></ListItem>\r\n                            </HtmlTooltip>\r\n                        </List>\r\n                    </>\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n            <main className={clsx(classes.content, { [classes.contentShift]: open, })} >\r\n                <Toolbar />\r\n                <ClockAndConnection {...props} />\r\n                <Switch>\r\n                    <Route exact path={\"/\"} render={propss => <Home {...props} {...propss} />} />\r\n                    <Route exact path={\"/register\"} render={propss => <Register {...props} {...propss} />} />\r\n\r\n                    <Route exact path={\"/contests\"} render={propss => <Contests {...props} {...propss} />} />\r\n                    <Route exact path={\"/questions/:cid\"} render={propss => <ViewQuestion {...props} {...propss} />} />\r\n                    <Route exact path={\"/ranklist/:cid\"} render={propss => <Ranking {...props} {...propss} />} />\r\n                    <Route exact path={\"/discussion/:cid\"} render={propss => <Discussion {...props} {...propss} />} />\r\n                    <Route exact path={\"/announcement/:cid\"} render={propss => <Announcement {...props} {...propss} />} />\r\n                    <Route exact path={\"/profile\"} render={propss => <Profile {...props} {...propss} />} />\r\n\r\n                    <Route exact path={\"/contest/:cid\"} render={propss => <AddContest {...props}  {...propss} />} />\r\n                    <Route exact path={\"/question/:cid/:qid\"} render={propss => <AddQuestion {...props}  {...propss} />} />\r\n                    <Route exact path={\"/allcontests\"} render={propss => <AllContests {...props}  {...propss} />} />\r\n                    <Route exact path={\"/allquestions/:cid\"} render={propss => <AllQuestions {...props} {...propss} />} />\r\n                    <Route exact path={\"/transfer/:cid\"} render={propss => <QuestionTransfer {...props}  {...propss} />} />\r\n                    <Route exact path={\"/manageusers/:cid\"} render={propss => <UserManagement {...props}  {...propss} />} />\r\n                    <Route exact path={\"/userlist\"} render={propss => <UserDetails {...props}  {...propss} />} />\r\n                    <Route exact path={\"/servercontrol\"} render={propss => <ServerControl {...props}  {...propss} />} />\r\n                    <Route exact path={\"/userranklist/:cid\"} render={propss => <AdminRanking {...props} {...propss} />} />\r\n                    <Route exact path={\"/discussions/:cid\"} render={propss => <Discussions {...props} {...propss} />} />\r\n                    <Route exact path={\"/announcements/:cid\"} render={propss => <Announcements {...props} {...propss} />} />\r\n\r\n                    <Route exact path={\"*\"} render={propss => <ErrorPage {...props} {...propss} />} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n            <Dialog open={openD} onClose={() => handleClose(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">LOGIN</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"l1\" label=\"Email ID\" type=\"text\" fullWidth onInput={$e => setEmail($e.target.value)} />\r\n                    <TextField variant=\"outlined\" margin=\"dense\" id=\"l2\" label=\"Enter Password\" type=\"password\" fullWidth onInput={$e => setPswd($e.target.value)} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleClose(false)}> Cancel </Button>\r\n                    <Button onClick={() => handleClose(true)} disabled={email === \"\" || pswd === \"\"}> Login  </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Route>\r\n        </>);\r\n}\r\n\r\nexport default BaseComponent;","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { configs } from \"./globals\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { createMuiTheme, ThemeProvider, useMediaQuery, Typography, Snackbar, Backdrop, Button, Dialog, DialogTitle, DialogActions, DialogContent, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport BaseComponent from \"./components/BaseComponent\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst customStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.appBar + 1,\r\n    color: '#fff',\r\n    position: 'fixed'\r\n  },\r\n}))\r\n\r\nconst App = () => {\r\n  const classes = customStyles();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [socket, setSocket] = React.useState(null);\r\n  const [tcs, setTCS] = React.useState(null);\r\n  const [error, setError] = React.useState(0);\r\n  const [discussions, setDiscussions] = React.useState({});\r\n  const [announcements, setAnnouncements] = React.useState({});\r\n  const [globalTime, setGlobalTime] = React.useState(new Date().getTime());\r\n  const [snack, setSnack] = React.useState({\r\n    show: false,\r\n    msg: \"\",\r\n    status: false\r\n  });\r\n  const [confirmer, setConfirmer] = React.useState({\r\n    open: false,\r\n    title: \"\",\r\n    content: \"\",\r\n    positiveButtonText: \"\",\r\n    negativeButtonText: \"\",\r\n    cb: null\r\n  });\r\n  const [notification, setNotification] = React.useState({\r\n    open: false,\r\n    message: \"\",\r\n    buttonText: \"\",\r\n    cb: null\r\n  });\r\n\r\n  const createSocket = () => {\r\n    let user = atob(localStorage.getItem('token').split(\".\")[1]);\r\n    const soc = io(configs.baseUrl + '/loggedin', {\r\n      query: {\r\n        email: JSON.parse(user).email,\r\n        type: configs.isAdmin() ? 'admin' : 'user',\r\n        cids: localStorage.getItem('contestInfo')\r\n      }\r\n    });\r\n    soc.on('connect', () => {\r\n      console.log(\"Connected to server\");\r\n      setLoading(false);\r\n    });\r\n    soc.on('disconnect', () => {\r\n      console.log(\"Disconnected from server\");\r\n    });\r\n    soc.on('new-question-added-info', data => {\r\n      let tit = \"\", prefix = \"\";\r\n      if (data.title.length === 1) {\r\n        tit = data.title[0];\r\n        prefix = \"A new question\";\r\n      }\r\n      else {\r\n        for (let i = 0; i < data.title.length - 2; i++)\r\n          tit += data.title[i] + \", \";\r\n        tit += data.title[data.title.length - 2] + \" and \" + data.title[data.title.length - 1];\r\n        prefix = \"Some new questions\";\r\n      }\r\n      setNotification({\r\n        open: true,\r\n        message: `${prefix} ${tit} has been uploaded in the contest ${data.name}. Refresh the page to view the new question(s).`,\r\n        buttonText: \"Refresh\",\r\n        cb: () => window.location.reload()\r\n      });\r\n    });\r\n    soc.on('contest-edited-info', data => {\r\n      setNotification({\r\n        open: true,\r\n        message: `The contest ${data.name} has been edited. Start Time and/or End Time may have changed. Please Refresh the page.`,\r\n        buttonText: \"Refresh\",\r\n        cb: () => window.location.reload()\r\n      });\r\n    });\r\n    soc.on('discussion-info', data => {\r\n      setDiscussions((prevDisc) => ({ ...prevDisc, [`${data.cid}`]: [...prevDisc[`${data.cid}`] || [], data.msg] }));\r\n      setNotification({\r\n        open: true,\r\n        message: `There is(are) a(some) new discussion message(s) for contest(${data.cid}).`,\r\n        buttonText: \"\",\r\n        cb: null\r\n      });\r\n    });\r\n    soc.on('announcement-info', data => {\r\n      setAnnouncements((prevDisc) => ({ ...prevDisc, [`${data.cid}`]: [data.msg, ...prevDisc[`${data.cid}`] || []] }));\r\n      setNotification({\r\n        open: true,\r\n        message: `There is(are) a(some) new announcement for contest (${data.cid}).`,\r\n        buttonText: \"\",\r\n        cb: null\r\n      });\r\n    });\r\n    if (configs.isUser()) {\r\n      soc.on('allowed-users-info', data => {\r\n        if (data.users.indexOf(configs.getEmail()) !== -1) {\r\n          localStorage.setItem('contestInfo', JSON.stringify([...JSON.parse(localStorage.getItem('contestInfo')), data.cid]));\r\n          soc.emit('join-me', { cid: data.cid });\r\n          setNotification({\r\n            open: true,\r\n            message: `You now have access to the contest ${data.name}. Refresh the page to view the Contest.`,\r\n            buttonText: \"Refresh\",\r\n            cb: () => window.location.reload()\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (configs.isAdmin()) {\r\n      soc.on('new-question-added-info2', data => {\r\n        setNotification({\r\n          open: true,\r\n          message: `A new question ${data.title} has been uploaded. Refresh the page to view the new question.`,\r\n          buttonText: \"Refresh\",\r\n          cb: () => window.location.reload()\r\n        });\r\n      });\r\n      soc.on('new-contest-added-info', data => {\r\n        localStorage.setItem('contestInfo', JSON.stringify([...JSON.parse(localStorage.getItem('contestInfo')), data.cid]));\r\n        soc.emit('join-me', { cid: data.cid });\r\n        setNotification({\r\n          open: true,\r\n          message: `A contest ${data.name} has been added. Refresh the page to view the Contest.`,\r\n          buttonText: \"Refresh\",\r\n          cb: () => window.location.reload()\r\n        });\r\n      });\r\n      soc.on('question-edited-info', data => {\r\n        setNotification({\r\n          open: true,\r\n          message: `The question ${data.title} has been edited. Please Refresh the page.`,\r\n          buttonText: \"Refresh\",\r\n          cb: () => window.location.reload()\r\n        });\r\n      });\r\n    }\r\n    setSocket(soc);\r\n  }\r\n\r\n  const closeConfirmation = (open) => {\r\n    if (open)\r\n      confirmer.cb();\r\n    setConfirmer({ open: false, title: \"\", content: \"\", positiveButtonText: \"\", negativeButtonText: \"\", cb: null });\r\n  };\r\n\r\n  const openConfirmation = (conf) => { setConfirmer({ open: true, ...conf }); };\r\n\r\n  const closeSnack = () => { setSnack({ ...snack, show: false, msg: \"\" }); };\r\n\r\n  React.useEffect(() => {\r\n    const ttccss = io(configs.baseUrl + '/tcs');\r\n    ttccss.on('connect', () => {\r\n      console.clear()\r\n      console.log(\"TCS Connected to server\");\r\n      setError(1);\r\n    });\r\n    ttccss.on('disconnect', () => {\r\n      console.log(\"TCS Disconnected from server\");\r\n      setError(-1);\r\n    });\r\n    ttccss.on('time-info', time => {\r\n      setGlobalTime(new Date(time).getTime());\r\n    });\r\n    ttccss.on('force-reload-execute', () => {\r\n      window.location.reload();\r\n    });\r\n    setTCS(ttccss);\r\n\r\n    if (configs.isLoggedIn()) {\r\n      setLoading(true);\r\n      createSocket();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop className={classes.backdrop} open={loading && error === 1}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </Backdrop>\r\n      <Dialog open={confirmer.open} onClose={() => closeConfirmation(false)} aria-labelledby=\"form-dialog-titlee\">\r\n        <DialogTitle id=\"form-dialog-titlee\">{confirmer.title}</DialogTitle>\r\n        <DialogContent style={{ textAlign: ' justify', whiteSpace: 'pre-line', wordWrap: 'break-word' }}>\r\n          <Typography color=\"textSecondary\" dangerouslySetInnerHTML={{ __html: confirmer.content }}></Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {confirmer.negativeButtonText && <Button onClick={() => closeConfirmation(false)}> {confirmer.negativeButtonText} </Button>}\r\n          <Button onClick={() => closeConfirmation(true)}> {confirmer.positiveButtonText}  </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={snack.show} autoHideDuration={4000} onClose={closeSnack}>\r\n        <Alert elevation={10} variant=\"filled\" onClose={closeSnack} severity={snack.status ? \"success\" : \"error\"}>\r\n          {snack.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Router>\r\n        <Route path={\"/\"} render={props => (\r\n          <BaseComponent {...props} error={error} announcements={announcements} setAnnouncements={setAnnouncements} discussions={discussions} setDiscussions={setDiscussions} tcs={tcs} notification={notification} setNotification={setNotification} globalTime={globalTime} setLoading={setLoading} setSnack={setSnack} openConfirmation={openConfirmation} socket={socket} createSocket={createSocket} />\r\n        )}></Route>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}